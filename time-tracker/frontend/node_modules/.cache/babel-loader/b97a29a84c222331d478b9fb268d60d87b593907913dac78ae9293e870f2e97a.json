{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codes\\\\My Projects\\\\time-Machine\\\\time-tracker\\\\frontend\\\\src\\\\components\\\\timer\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlay, FiPause, FiSquare, FiClock, FiCoffee, FiCheckCircle } from 'react-icons/fi';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimerContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n_c = TimerContainer;\nconst TimerCard = styled.div`\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  padding: 48px;\n  text-align: center;\n  margin-bottom: 32px;\n`;\n_c2 = TimerCard;\nconst TimerDisplay = styled.div`\n  font-size: 4rem;\n  font-weight: 700;\n  color: ${props => props.isRunning ? '#28a745' : '#2c3e50'};\n  font-family: 'Courier New', monospace;\n  margin-bottom: 32px;\n  letter-spacing: 2px;\n\n  @media (max-width: 768px) {\n    font-size: 3rem;\n  }\n`;\n_c3 = TimerDisplay;\nconst TimerControls = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  margin-bottom: 32px;\n`;\n_c4 = TimerControls;\nconst ControlButton = styled.button`\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 24px;\n\n  &.primary {\n    background: ${props => props.isRunning ? '#dc3545' : '#28a745'};\n    color: white;\n\n    &:hover {\n      background: ${props => props.isRunning ? '#c82333' : '#218838'};\n      transform: scale(1.05);\n    }\n  }\n\n  &.secondary {\n    background: #6c757d;\n    color: white;\n\n    &:hover {\n      background: #5a6268;\n      transform: scale(1.05);\n    }\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c5 = ControlButton;\nconst TimerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n_c6 = TimerForm;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n`;\n_c7 = FormGroup;\nconst Label = styled.label`\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #374151;\n`;\n_c8 = Label;\nconst Select = styled.select`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n_c9 = Select;\nconst Input = styled.input`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\nconst Textarea = styled.textarea`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  resize: vertical;\n  min-height: 80px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n_c0 = Textarea;\nconst CurrentActivity = styled.div`\n  background: #e3f2fd;\n  border: 1px solid #2196f3;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n  text-align: left;\n`;\n_c1 = CurrentActivity;\nconst ActivityTitle = styled.div`\n  font-weight: 600;\n  color: #1976d2;\n  margin-bottom: 8px;\n`;\n_c10 = ActivityTitle;\nconst ActivityMeta = styled.div`\n  color: #666;\n  font-size: 14px;\n`;\n_c11 = ActivityMeta;\nconst BreakCard = styled.div`\n  background: ${props => props.isOnBreak ? '#fff3cd' : '#f8f9fa'};\n  border: 1px solid ${props => props.isOnBreak ? '#ffeaa7' : '#e9ecef'};\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n  text-align: left;\n`;\n_c12 = BreakCard;\nconst BreakControls = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 16px;\n  align-items: center;\n`;\n_c13 = BreakControls;\nconst BreakButton = styled.button`\n  padding: 8px 16px;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &.start-break {\n    background: #ff6b35;\n    color: white;\n\n    &:hover {\n      background: #e55a2b;\n    }\n  }\n\n  &.end-break {\n    background: #28a745;\n    color: white;\n\n    &:hover {\n      background: #218838;\n    }\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n_c14 = BreakButton;\nconst BreakTypeSelect = styled.select`\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n_c15 = BreakTypeSelect;\nconst BreakStatus = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  color: ${props => props.isOnBreak ? '#d68910' : '#28a745'};\n`;\n_c16 = BreakStatus;\nconst PastTimersCard = styled.div`\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  padding: 32px;\n  margin-bottom: 32px;\n`;\n_c17 = PastTimersCard;\nconst PastTimersHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #e9ecef;\n`;\n_c18 = PastTimersHeader;\nconst PastTimersTitle = styled.h3`\n  margin: 0;\n  color: #2c3e50;\n  font-size: 1.25rem;\n  font-weight: 600;\n`;\n_c19 = PastTimersTitle;\nconst ToggleButton = styled.button`\n  background: none;\n  border: none;\n  color: #6c757d;\n  cursor: pointer;\n  font-size: 14px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f8f9fa;\n    color: #495057;\n  }\n`;\n_c20 = ToggleButton;\nconst PastTimersList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n_c21 = PastTimersList;\nconst PastTimerItem = styled.div`\n  display: flex;\n  justify-content: between;\n  align-items: center;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #e9ecef;\n    border-color: #d1d5db;\n  }\n`;\n_c22 = PastTimerItem;\nconst PastTimerInfo = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n_c23 = PastTimerInfo;\nconst PastTimerProject = styled.div`\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 4px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c24 = PastTimerProject;\nconst PastTimerTask = styled.div`\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 4px;\n`;\n_c25 = PastTimerTask;\nconst PastTimerDescription = styled.div`\n  font-size: 14px;\n  color: #6c757d;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 4px;\n`;\n_c26 = PastTimerDescription;\nconst PastTimerMeta = styled.div`\n  font-size: 12px;\n  color: #9ca3af;\n  display: flex;\n  gap: 16px;\n`;\n_c27 = PastTimerMeta;\nconst PastTimerActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-left: 16px;\n`;\n_c28 = PastTimerActions;\nconst PastTimerDuration = styled.div`\n  font-family: 'Courier New', monospace;\n  font-weight: 600;\n  color: #28a745;\n  font-size: 14px;\n  text-align: right;\n  min-width: 80px;\n`;\nconst ContinueButton = styled.button`\n  padding: 8px 16px;\n  background: #28a745;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  &:hover {\n    background: #218838;\n    transform: translateY(-1px);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c29 = ContinueButton;\nconst ProjectColorDot = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color || '#6c757d'};\n`;\n_c30 = ProjectColorDot;\nconst EmptyPastTimers = styled.div`\n  text-align: center;\n  padding: 32px;\n  color: #6c757d;\n  font-style: italic;\n`;\n_c31 = EmptyPastTimers;\nconst TotalTimeDisplay = styled.span`\n  font-size: 12px;\n  background: #e3f2fd;\n  color: #1976d2;\n  padding: 2px 8px;\n  border-radius: 12px;\n  margin-left: 8px;\n`;\nconst Timer = () => {\n  _s();\n  var _runningEntry$project, _runningEntry$task;\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [runningEntry, setRunningEntry] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [activeBreak, setActiveBreak] = useState(null);\n  const [breakType, setBreakType] = useState('other');\n  const [pastTimers, setPastTimers] = useState([]);\n  const [showPastTimers, setShowPastTimers] = useState(true);\n  const [formData, setFormData] = useState({\n    project: '',\n    task: '',\n    description: ''\n  });\n  useEffect(() => {\n    fetchProjects();\n    checkRunningTimer();\n    checkActiveBreak();\n    fetchPastTimers();\n  }, []);\n  useEffect(() => {\n    if (formData.project) {\n      fetchTasks(formData.project);\n    } else {\n      setTasks([]);\n    }\n  }, [formData.project]);\n  useEffect(() => {\n    let interval;\n    if (isRunning && runningEntry) {\n      interval = setInterval(() => {\n        const startTime = new Date(runningEntry.startTime);\n        const now = new Date();\n        setElapsedTime(Math.floor((now - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, runningEntry]);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n  const fetchTasks = async projectId => {\n    try {\n      const response = await axios.get(`/tasks?project=${projectId}`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const checkRunningTimer = async () => {\n    try {\n      const response = await axios.get('/time-entries/running');\n      if (response.data) {\n        var _response$data$task;\n        setRunningEntry(response.data);\n        setIsRunning(true);\n        const startTime = new Date(response.data.startTime);\n        const now = new Date();\n        setElapsedTime(Math.floor((now - startTime) / 1000));\n\n        // Populate form with running entry data\n        setFormData({\n          project: response.data.project._id,\n          task: ((_response$data$task = response.data.task) === null || _response$data$task === void 0 ? void 0 : _response$data$task._id) || '',\n          description: response.data.description || ''\n        });\n      }\n    } catch (error) {\n      // No running timer\n    }\n  };\n  const checkActiveBreak = async () => {\n    try {\n      const response = await axios.get('/breaks/active');\n      setActiveBreak(response.data);\n    } catch (error) {\n      // No active break\n    }\n  };\n  const startTimer = async () => {\n    if (!formData.project) {\n      toast.error('Please select a project');\n      return;\n    }\n    try {\n      const response = await axios.post('/time-entries', {\n        project: formData.project,\n        task: formData.task || null,\n        description: formData.description,\n        startTime: new Date().toISOString(),\n        duration: 0\n      });\n      setRunningEntry(response.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n      toast.success('Timer started!');\n    } catch (error) {\n      toast.error('Failed to start timer');\n      console.error('Error starting timer:', error);\n    }\n  };\n  const stopTimer = async () => {\n    if (!runningEntry) return;\n    try {\n      await axios.post(`/time-entries/${runningEntry._id}/stop`);\n      setIsRunning(false);\n      setRunningEntry(null);\n      setElapsedTime(0);\n      setFormData({\n        project: '',\n        task: '',\n        description: ''\n      });\n      fetchPastTimers(); // Refresh past timers after stopping\n      toast.success('Timer stopped!');\n    } catch (error) {\n      toast.error('Failed to stop timer');\n      console.error('Error stopping timer:', error);\n    }\n  };\n  const updateDescription = async () => {\n    if (!runningEntry) return;\n    try {\n      await axios.put(`/time-entries/${runningEntry._id}`, {\n        description: formData.description\n      });\n      toast.success('Description updated!');\n    } catch (error) {\n      toast.error('Failed to update description');\n      console.error('Error updating description:', error);\n    }\n  };\n  const startBreak = async () => {\n    if (!runningEntry) {\n      toast.error('No active timer to start break on');\n      return;\n    }\n    try {\n      const response = await axios.post('/breaks/start', {\n        timeEntryId: runningEntry._id,\n        breakType: breakType\n      });\n      setActiveBreak(response.data);\n      toast.success(`${breakType.charAt(0).toUpperCase() + breakType.slice(1)} break started!`);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to start break');\n      console.error('Error starting break:', error);\n    }\n  };\n  const endBreak = async () => {\n    if (!activeBreak) return;\n    try {\n      await axios.put(`/breaks/end/${activeBreak._id}`);\n      setActiveBreak(null);\n      toast.success('Break ended!');\n    } catch (error) {\n      toast.error('Failed to end break');\n      console.error('Error ending break:', error);\n    }\n  };\n  const continueTimer = async pastEntry => {\n    if (isRunning) {\n      toast.error('Please stop the current timer first');\n      return;\n    }\n    try {\n      var _pastEntry$task, _pastEntry$task2;\n      // Start a new timer with the same project, task, and description\n      const response = await axios.post('/time-entries', {\n        project: pastEntry.project._id,\n        task: ((_pastEntry$task = pastEntry.task) === null || _pastEntry$task === void 0 ? void 0 : _pastEntry$task._id) || null,\n        description: pastEntry.description || '',\n        startTime: new Date().toISOString(),\n        duration: 0\n      });\n      setRunningEntry(response.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n\n      // Update form data\n      setFormData({\n        project: pastEntry.project._id,\n        task: ((_pastEntry$task2 = pastEntry.task) === null || _pastEntry$task2 === void 0 ? void 0 : _pastEntry$task2._id) || '',\n        description: pastEntry.description || ''\n      });\n\n      // Fetch tasks for the selected project\n      if (pastEntry.project._id) {\n        fetchTasks(pastEntry.project._id);\n      }\n      toast.success('Timer continued!');\n    } catch (error) {\n      toast.error('Failed to continue timer');\n      console.error('Error continuing timer:', error);\n    }\n  };\n  const getTotalTimeForProject = (projectId, taskId = null) => {\n    const relevantEntries = pastTimers.filter(entry => {\n      var _entry$task;\n      const projectMatch = entry.project._id === projectId;\n      const taskMatch = taskId ? ((_entry$task = entry.task) === null || _entry$task === void 0 ? void 0 : _entry$task._id) === taskId : !entry.task;\n      return projectMatch && taskMatch;\n    });\n    const totalSeconds = relevantEntries.reduce((total, entry) => total + entry.duration, 0);\n    return formatTime(totalSeconds);\n  };\n  const fetchPastTimers = async () => {\n    try {\n      const response = await axios.get('/time-entries?limit=10');\n      // Filter out currently running timer and group by project+task combination\n      const pastEntries = response.data.timeEntries.filter(entry => !entry.isRunning);\n      setPastTimers(pastEntries);\n    } catch (error) {\n      console.error('Error fetching past timers:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleFormChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    if (field === 'description' && runningEntry) {\n      // Debounce description updates\n      clearTimeout(window.descriptionTimeout);\n      window.descriptionTimeout = setTimeout(updateDescription, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TimerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TimerCard, {\n      children: [/*#__PURE__*/_jsxDEV(TimerDisplay, {\n        isRunning: isRunning,\n        children: formatTime(elapsedTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimerControls, {\n        children: /*#__PURE__*/_jsxDEV(ControlButton, {\n          className: \"primary\",\n          isRunning: isRunning,\n          onClick: isRunning ? stopTimer : startTimer,\n          disabled: !isRunning && !formData.project,\n          children: isRunning ? /*#__PURE__*/_jsxDEV(FiPause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(FiPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this), \"        \", runningEntry && /*#__PURE__*/_jsxDEV(CurrentActivity, {\n        children: [/*#__PURE__*/_jsxDEV(ActivityTitle, {\n          children: [/*#__PURE__*/_jsxDEV(FiClock, {\n            style: {\n              marginRight: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this), \"Currently tracking: \", (_runningEntry$project = runningEntry.project) === null || _runningEntry$project === void 0 ? void 0 : _runningEntry$project.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ActivityMeta, {\n          children: [((_runningEntry$task = runningEntry.task) === null || _runningEntry$task === void 0 ? void 0 : _runningEntry$task.name) && `Task: ${runningEntry.task.name} • `, \"Started: \", new Date(runningEntry.startTime).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 11\n      }, this), runningEntry && /*#__PURE__*/_jsxDEV(BreakCard, {\n        isOnBreak: !!activeBreak,\n        children: [/*#__PURE__*/_jsxDEV(BreakStatus, {\n          isOnBreak: !!activeBreak,\n          children: [/*#__PURE__*/_jsxDEV(FiCoffee, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this), activeBreak ? 'On Break' : 'Ready for Break']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 13\n        }, this), activeBreak ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '8px',\n              fontSize: '14px',\n              color: '#666'\n            },\n            children: [\"Break Type: \", activeBreak.breakType, \" \\u2022 Started: \", new Date(activeBreak.startTime).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BreakControls, {\n            children: /*#__PURE__*/_jsxDEV(BreakButton, {\n              className: \"end-break\",\n              onClick: endBreak,\n              children: [/*#__PURE__*/_jsxDEV(FiCheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 21\n              }, this), \"End Break\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(BreakControls, {\n          children: [/*#__PURE__*/_jsxDEV(BreakTypeSelect, {\n            value: breakType,\n            onChange: e => setBreakType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"coffee\",\n              children: \"Coffee Break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lunch\",\n              children: \"Lunch Break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"personal\",\n              children: \"Personal Break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"meeting\",\n              children: \"Meeting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BreakButton, {\n            className: \"start-break\",\n            onClick: startBreak,\n            children: [/*#__PURE__*/_jsxDEV(FiCoffee, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 19\n            }, this), \"Start Break\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TimerForm, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Project *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: formData.project,\n            onChange: e => handleFormChange('project', e.target.value),\n            disabled: isRunning,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 15\n            }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: project._id,\n              children: project.name\n            }, project._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Task (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: formData.task,\n            onChange: e => handleFormChange('task', e.target.value),\n            disabled: isRunning || !formData.project,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 15\n            }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: task._id,\n              children: task.name\n            }, task._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n            value: formData.description,\n            onChange: e => handleFormChange('description', e.target.value),\n            placeholder: \"What are you working on?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 7\n    }, this), showPastTimers && pastTimers.length > 0 && /*#__PURE__*/_jsxDEV(PastTimersCard, {\n      children: [/*#__PURE__*/_jsxDEV(PastTimersHeader, {\n        children: [/*#__PURE__*/_jsxDEV(PastTimersTitle, {\n          children: \"Past Timers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          onClick: () => setShowPastTimers(false),\n          children: \"Hide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PastTimersList, {\n        children: pastTimers.map(timer => /*#__PURE__*/_jsxDEV(PastTimerItem, {\n          children: [/*#__PURE__*/_jsxDEV(PastTimerInfo, {\n            children: [/*#__PURE__*/_jsxDEV(PastTimerProject, {\n              children: [/*#__PURE__*/_jsxDEV(ProjectColorDot, {\n                color: timer.project.color\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 21\n              }, this), timer.project.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 19\n            }, this), timer.task && /*#__PURE__*/_jsxDEV(PastTimerTask, {\n              children: [\"Task: \", timer.task.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(PastTimerDescription, {\n              children: timer.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PastTimerMeta, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Started: \", new Date(timer.startTime).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Duration: \", formatTime(timer.duration)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PastTimerActions, {\n            children: /*#__PURE__*/_jsxDEV(ContinueButton, {\n              onClick: () => continueTimer(timer),\n              children: [/*#__PURE__*/_jsxDEV(FiPlay, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 21\n              }, this), \"Continue\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 17\n          }, this)]\n        }, timer._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 9\n    }, this), showPastTimers && pastTimers.length === 0 && /*#__PURE__*/_jsxDEV(EmptyPastTimers, {\n      children: \"No past timers found. Your tracked time will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 660,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"hL6XnyixhjYiqEk+YzNDcUjuFaQ=\");\n_c32 = Timer;\nexport default Timer;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32;\n$RefreshReg$(_c, \"TimerContainer\");\n$RefreshReg$(_c2, \"TimerCard\");\n$RefreshReg$(_c3, \"TimerDisplay\");\n$RefreshReg$(_c4, \"TimerControls\");\n$RefreshReg$(_c5, \"ControlButton\");\n$RefreshReg$(_c6, \"TimerForm\");\n$RefreshReg$(_c7, \"FormGroup\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"Select\");\n$RefreshReg$(_c0, \"Textarea\");\n$RefreshReg$(_c1, \"CurrentActivity\");\n$RefreshReg$(_c10, \"ActivityTitle\");\n$RefreshReg$(_c11, \"ActivityMeta\");\n$RefreshReg$(_c12, \"BreakCard\");\n$RefreshReg$(_c13, \"BreakControls\");\n$RefreshReg$(_c14, \"BreakButton\");\n$RefreshReg$(_c15, \"BreakTypeSelect\");\n$RefreshReg$(_c16, \"BreakStatus\");\n$RefreshReg$(_c17, \"PastTimersCard\");\n$RefreshReg$(_c18, \"PastTimersHeader\");\n$RefreshReg$(_c19, \"PastTimersTitle\");\n$RefreshReg$(_c20, \"ToggleButton\");\n$RefreshReg$(_c21, \"PastTimersList\");\n$RefreshReg$(_c22, \"PastTimerItem\");\n$RefreshReg$(_c23, \"PastTimerInfo\");\n$RefreshReg$(_c24, \"PastTimerProject\");\n$RefreshReg$(_c25, \"PastTimerTask\");\n$RefreshReg$(_c26, \"PastTimerDescription\");\n$RefreshReg$(_c27, \"PastTimerMeta\");\n$RefreshReg$(_c28, \"PastTimerActions\");\n$RefreshReg$(_c29, \"ContinueButton\");\n$RefreshReg$(_c30, \"ProjectColorDot\");\n$RefreshReg$(_c31, \"EmptyPastTimers\");\n$RefreshReg$(_c32, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","styled","FiPlay","FiPause","FiSquare","FiClock","FiCoffee","FiCheckCircle","axios","toast","jsxDEV","_jsxDEV","TimerContainer","div","_c","TimerCard","_c2","TimerDisplay","props","isRunning","_c3","TimerControls","_c4","ControlButton","button","_c5","TimerForm","_c6","FormGroup","_c7","Label","label","_c8","Select","select","_c9","Input","input","Textarea","textarea","_c0","CurrentActivity","_c1","ActivityTitle","_c10","ActivityMeta","_c11","BreakCard","isOnBreak","_c12","BreakControls","_c13","BreakButton","_c14","BreakTypeSelect","_c15","BreakStatus","_c16","PastTimersCard","_c17","PastTimersHeader","_c18","PastTimersTitle","h3","_c19","ToggleButton","_c20","PastTimersList","_c21","PastTimerItem","_c22","PastTimerInfo","_c23","PastTimerProject","_c24","PastTimerTask","_c25","PastTimerDescription","_c26","PastTimerMeta","_c27","PastTimerActions","_c28","PastTimerDuration","ContinueButton","_c29","ProjectColorDot","color","_c30","EmptyPastTimers","_c31","TotalTimeDisplay","span","Timer","_s","_runningEntry$project","_runningEntry$task","setIsRunning","elapsedTime","setElapsedTime","runningEntry","setRunningEntry","projects","setProjects","tasks","setTasks","activeBreak","setActiveBreak","breakType","setBreakType","pastTimers","setPastTimers","showPastTimers","setShowPastTimers","formData","setFormData","project","task","description","fetchProjects","checkRunningTimer","checkActiveBreak","fetchPastTimers","fetchTasks","interval","setInterval","startTime","Date","now","Math","floor","clearInterval","response","get","data","error","console","projectId","_response$data$task","_id","startTimer","post","toISOString","duration","success","stopTimer","updateDescription","put","startBreak","timeEntryId","charAt","toUpperCase","slice","_error$response","_error$response$data","message","endBreak","continueTimer","pastEntry","_pastEntry$task","_pastEntry$task2","getTotalTimeForProject","taskId","relevantEntries","filter","entry","_entry$task","projectMatch","taskMatch","totalSeconds","reduce","total","formatTime","pastEntries","timeEntries","seconds","hours","minutes","secs","toString","padStart","handleFormChange","field","value","prev","clearTimeout","window","descriptionTimeout","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","style","marginRight","name","toLocaleTimeString","marginTop","fontSize","size","onChange","e","target","map","placeholder","length","timer","toLocaleString","_c32","$RefreshReg$"],"sources":["D:/Codes/My Projects/time-Machine/time-tracker/frontend/src/components/timer/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlay, FiPause, FiSquare, FiClock, FiCoffee, FiCheckCircle } from 'react-icons/fi';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst TimerContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst TimerCard = styled.div`\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  padding: 48px;\n  text-align: center;\n  margin-bottom: 32px;\n`;\n\nconst TimerDisplay = styled.div`\n  font-size: 4rem;\n  font-weight: 700;\n  color: ${props => props.isRunning ? '#28a745' : '#2c3e50'};\n  font-family: 'Courier New', monospace;\n  margin-bottom: 32px;\n  letter-spacing: 2px;\n\n  @media (max-width: 768px) {\n    font-size: 3rem;\n  }\n`;\n\nconst TimerControls = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  margin-bottom: 32px;\n`;\n\nconst ControlButton = styled.button`\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 24px;\n\n  &.primary {\n    background: ${props => props.isRunning ? '#dc3545' : '#28a745'};\n    color: white;\n\n    &:hover {\n      background: ${props => props.isRunning ? '#c82333' : '#218838'};\n      transform: scale(1.05);\n    }\n  }\n\n  &.secondary {\n    background: #6c757d;\n    color: white;\n\n    &:hover {\n      background: #5a6268;\n      transform: scale(1.05);\n    }\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst TimerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #374151;\n`;\n\nconst Select = styled.select`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n\nconst Textarea = styled.textarea`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  resize: vertical;\n  min-height: 80px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n\nconst CurrentActivity = styled.div`\n  background: #e3f2fd;\n  border: 1px solid #2196f3;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n  text-align: left;\n`;\n\nconst ActivityTitle = styled.div`\n  font-weight: 600;\n  color: #1976d2;\n  margin-bottom: 8px;\n`;\n\nconst ActivityMeta = styled.div`\n  color: #666;\n  font-size: 14px;\n`;\n\nconst BreakCard = styled.div`\n  background: ${props => props.isOnBreak ? '#fff3cd' : '#f8f9fa'};\n  border: 1px solid ${props => props.isOnBreak ? '#ffeaa7' : '#e9ecef'};\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n  text-align: left;\n`;\n\nconst BreakControls = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 16px;\n  align-items: center;\n`;\n\nconst BreakButton = styled.button`\n  padding: 8px 16px;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &.start-break {\n    background: #ff6b35;\n    color: white;\n\n    &:hover {\n      background: #e55a2b;\n    }\n  }\n\n  &.end-break {\n    background: #28a745;\n    color: white;\n\n    &:hover {\n      background: #218838;\n    }\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst BreakTypeSelect = styled.select`\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nconst BreakStatus = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  color: ${props => props.isOnBreak ? '#d68910' : '#28a745'};\n`;\n\nconst PastTimersCard = styled.div`\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  padding: 32px;\n  margin-bottom: 32px;\n`;\n\nconst PastTimersHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #e9ecef;\n`;\n\nconst PastTimersTitle = styled.h3`\n  margin: 0;\n  color: #2c3e50;\n  font-size: 1.25rem;\n  font-weight: 600;\n`;\n\nconst ToggleButton = styled.button`\n  background: none;\n  border: none;\n  color: #6c757d;\n  cursor: pointer;\n  font-size: 14px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f8f9fa;\n    color: #495057;\n  }\n`;\n\nconst PastTimersList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst PastTimerItem = styled.div`\n  display: flex;\n  justify-content: between;\n  align-items: center;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #e9ecef;\n    border-color: #d1d5db;\n  }\n`;\n\nconst PastTimerInfo = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst PastTimerProject = styled.div`\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 4px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst PastTimerTask = styled.div`\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 4px;\n`;\n\nconst PastTimerDescription = styled.div`\n  font-size: 14px;\n  color: #6c757d;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 4px;\n`;\n\nconst PastTimerMeta = styled.div`\n  font-size: 12px;\n  color: #9ca3af;\n  display: flex;\n  gap: 16px;\n`;\n\nconst PastTimerActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-left: 16px;\n`;\n\nconst PastTimerDuration = styled.div`\n  font-family: 'Courier New', monospace;\n  font-weight: 600;\n  color: #28a745;\n  font-size: 14px;\n  text-align: right;\n  min-width: 80px;\n`;\n\nconst ContinueButton = styled.button`\n  padding: 8px 16px;\n  background: #28a745;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  &:hover {\n    background: #218838;\n    transform: translateY(-1px);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst ProjectColorDot = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color || '#6c757d'};\n`;\n\nconst EmptyPastTimers = styled.div`\n  text-align: center;\n  padding: 32px;\n  color: #6c757d;\n  font-style: italic;\n`;\n\nconst TotalTimeDisplay = styled.span`\n  font-size: 12px;\n  background: #e3f2fd;\n  color: #1976d2;\n  padding: 2px 8px;\n  border-radius: 12px;\n  margin-left: 8px;\n`;\n\nconst Timer = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [runningEntry, setRunningEntry] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [activeBreak, setActiveBreak] = useState(null);\n  const [breakType, setBreakType] = useState('other');\n  const [pastTimers, setPastTimers] = useState([]);\n  const [showPastTimers, setShowPastTimers] = useState(true);\n  const [formData, setFormData] = useState({\n    project: '',\n    task: '',\n    description: ''\n  });\n  useEffect(() => {\n    fetchProjects();\n    checkRunningTimer();\n    checkActiveBreak();\n    fetchPastTimers();\n  }, []);\n\n  useEffect(() => {\n    if (formData.project) {\n      fetchTasks(formData.project);\n    } else {\n      setTasks([]);\n    }\n  }, [formData.project]);\n\n  useEffect(() => {\n    let interval;\n    if (isRunning && runningEntry) {\n      interval = setInterval(() => {\n        const startTime = new Date(runningEntry.startTime);\n        const now = new Date();\n        setElapsedTime(Math.floor((now - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, runningEntry]);\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n\n  const fetchTasks = async (projectId) => {\n    try {\n      const response = await axios.get(`/tasks?project=${projectId}`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const checkRunningTimer = async () => {\n    try {\n      const response = await axios.get('/time-entries/running');\n      if (response.data) {\n        setRunningEntry(response.data);\n        setIsRunning(true);\n        const startTime = new Date(response.data.startTime);\n        const now = new Date();\n        setElapsedTime(Math.floor((now - startTime) / 1000));\n        \n        // Populate form with running entry data\n        setFormData({\n          project: response.data.project._id,\n          task: response.data.task?._id || '',\n          description: response.data.description || ''\n        });\n      }\n    } catch (error) {\n      // No running timer\n    }\n  };\n\n  const checkActiveBreak = async () => {\n    try {\n      const response = await axios.get('/breaks/active');\n      setActiveBreak(response.data);\n    } catch (error) {\n      // No active break\n    }\n  };\n\n  const startTimer = async () => {\n    if (!formData.project) {\n      toast.error('Please select a project');\n      return;\n    }\n\n    try {\n      const response = await axios.post('/time-entries', {\n        project: formData.project,\n        task: formData.task || null,\n        description: formData.description,\n        startTime: new Date().toISOString(),\n        duration: 0\n      });\n\n      setRunningEntry(response.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n      toast.success('Timer started!');\n    } catch (error) {\n      toast.error('Failed to start timer');\n      console.error('Error starting timer:', error);\n    }\n  };\n\n  const stopTimer = async () => {\n    if (!runningEntry) return;\n\n    try {\n      await axios.post(`/time-entries/${runningEntry._id}/stop`);\n      setIsRunning(false);\n      setRunningEntry(null);\n      setElapsedTime(0);\n      setFormData({ project: '', task: '', description: '' });\n      fetchPastTimers(); // Refresh past timers after stopping\n      toast.success('Timer stopped!');\n    } catch (error) {\n      toast.error('Failed to stop timer');\n      console.error('Error stopping timer:', error);\n    }\n  };\n  const updateDescription = async () => {\n    if (!runningEntry) return;\n\n    try {\n      await axios.put(`/time-entries/${runningEntry._id}`, {\n        description: formData.description\n      });\n      toast.success('Description updated!');\n    } catch (error) {\n      toast.error('Failed to update description');\n      console.error('Error updating description:', error);\n    }\n  };\n\n  const startBreak = async () => {\n    if (!runningEntry) {\n      toast.error('No active timer to start break on');\n      return;\n    }\n\n    try {\n      const response = await axios.post('/breaks/start', {\n        timeEntryId: runningEntry._id,\n        breakType: breakType\n      });\n      setActiveBreak(response.data);\n      toast.success(`${breakType.charAt(0).toUpperCase() + breakType.slice(1)} break started!`);\n    } catch (error) {\n      toast.error(error.response?.data?.message || 'Failed to start break');\n      console.error('Error starting break:', error);\n    }\n  };\n\n  const endBreak = async () => {\n    if (!activeBreak) return;\n\n    try {\n      await axios.put(`/breaks/end/${activeBreak._id}`);\n      setActiveBreak(null);\n      toast.success('Break ended!');\n    } catch (error) {\n      toast.error('Failed to end break');\n      console.error('Error ending break:', error);\n    }\n  };\n\n  const continueTimer = async (pastEntry) => {\n    if (isRunning) {\n      toast.error('Please stop the current timer first');\n      return;\n    }\n\n    try {\n      // Start a new timer with the same project, task, and description\n      const response = await axios.post('/time-entries', {\n        project: pastEntry.project._id,\n        task: pastEntry.task?._id || null,\n        description: pastEntry.description || '',\n        startTime: new Date().toISOString(),\n        duration: 0\n      });\n\n      setRunningEntry(response.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n      \n      // Update form data\n      setFormData({\n        project: pastEntry.project._id,\n        task: pastEntry.task?._id || '',\n        description: pastEntry.description || ''\n      });\n\n      // Fetch tasks for the selected project\n      if (pastEntry.project._id) {\n        fetchTasks(pastEntry.project._id);\n      }\n\n      toast.success('Timer continued!');\n    } catch (error) {\n      toast.error('Failed to continue timer');\n      console.error('Error continuing timer:', error);\n    }\n  };\n\n  const getTotalTimeForProject = (projectId, taskId = null) => {\n    const relevantEntries = pastTimers.filter(entry => {\n      const projectMatch = entry.project._id === projectId;\n      const taskMatch = taskId ? entry.task?._id === taskId : !entry.task;\n      return projectMatch && taskMatch;\n    });\n\n    const totalSeconds = relevantEntries.reduce((total, entry) => total + entry.duration, 0);\n    return formatTime(totalSeconds);\n  };\n\n  const fetchPastTimers = async () => {\n    try {\n      const response = await axios.get('/time-entries?limit=10');\n      // Filter out currently running timer and group by project+task combination\n      const pastEntries = response.data.timeEntries.filter(entry => !entry.isRunning);\n      setPastTimers(pastEntries);\n    } catch (error) {\n      console.error('Error fetching past timers:', error);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleFormChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    if (field === 'description' && runningEntry) {\n      // Debounce description updates\n      clearTimeout(window.descriptionTimeout);\n      window.descriptionTimeout = setTimeout(updateDescription, 1000);\n    }\n  };\n\n  return (\n    <TimerContainer>\n      <TimerCard>\n        <TimerDisplay isRunning={isRunning}>\n          {formatTime(elapsedTime)}\n        </TimerDisplay>\n\n        <TimerControls>\n          <ControlButton\n            className=\"primary\"\n            isRunning={isRunning}\n            onClick={isRunning ? stopTimer : startTimer}\n            disabled={!isRunning && !formData.project}\n          >\n            {isRunning ? <FiPause /> : <FiPlay />}\n          </ControlButton>\n        </TimerControls>        {runningEntry && (\n          <CurrentActivity>\n            <ActivityTitle>\n              <FiClock style={{ marginRight: '8px' }} />\n              Currently tracking: {runningEntry.project?.name}\n            </ActivityTitle>\n            <ActivityMeta>\n              {runningEntry.task?.name && `Task: ${runningEntry.task.name} • `}\n              Started: {new Date(runningEntry.startTime).toLocaleTimeString()}\n            </ActivityMeta>\n          </CurrentActivity>\n        )}\n\n        {/* Break Controls */}\n        {runningEntry && (\n          <BreakCard isOnBreak={!!activeBreak}>\n            <BreakStatus isOnBreak={!!activeBreak}>\n              <FiCoffee />\n              {activeBreak ? 'On Break' : 'Ready for Break'}\n            </BreakStatus>\n            \n            {activeBreak ? (\n              <div>\n                <div style={{ marginTop: '8px', fontSize: '14px', color: '#666' }}>\n                  Break Type: {activeBreak.breakType} • Started: {new Date(activeBreak.startTime).toLocaleTimeString()}\n                </div>\n                <BreakControls>\n                  <BreakButton className=\"end-break\" onClick={endBreak}>\n                    <FiCheckCircle size={16} />\n                    End Break\n                  </BreakButton>\n                </BreakControls>\n              </div>\n            ) : (\n              <BreakControls>\n                <BreakTypeSelect \n                  value={breakType} \n                  onChange={(e) => setBreakType(e.target.value)}\n                >\n                  <option value=\"coffee\">Coffee Break</option>\n                  <option value=\"lunch\">Lunch Break</option>\n                  <option value=\"personal\">Personal Break</option>\n                  <option value=\"meeting\">Meeting</option>\n                  <option value=\"other\">Other</option>\n                </BreakTypeSelect>\n                <BreakButton className=\"start-break\" onClick={startBreak}>\n                  <FiCoffee size={16} />\n                  Start Break\n                </BreakButton>\n              </BreakControls>\n            )}\n          </BreakCard>\n        )}\n\n        <TimerForm>\n          <FormGroup>\n            <Label>Project *</Label>\n            <Select\n              value={formData.project}\n              onChange={(e) => handleFormChange('project', e.target.value)}\n              disabled={isRunning}\n            >\n              <option value=\"\">Select a project</option>\n              {projects.map(project => (\n                <option key={project._id} value={project._id}>\n                  {project.name}\n                </option>\n              ))}\n            </Select>\n          </FormGroup>\n\n          <FormGroup>\n            <Label>Task (Optional)</Label>\n            <Select\n              value={formData.task}\n              onChange={(e) => handleFormChange('task', e.target.value)}\n              disabled={isRunning || !formData.project}\n            >\n              <option value=\"\">Select a task</option>\n              {tasks.map(task => (\n                <option key={task._id} value={task._id}>\n                  {task.name}\n                </option>\n              ))}\n            </Select>\n          </FormGroup>\n\n          <FormGroup>\n            <Label>Description</Label>\n            <Textarea\n              value={formData.description}\n              onChange={(e) => handleFormChange('description', e.target.value)}\n              placeholder=\"What are you working on?\"\n            />\n          </FormGroup>\n        </TimerForm>\n      </TimerCard>\n\n      {/* Past Timers Section */}\n      {showPastTimers && pastTimers.length > 0 && (\n        <PastTimersCard>\n          <PastTimersHeader>\n            <PastTimersTitle>Past Timers</PastTimersTitle>\n            <ToggleButton onClick={() => setShowPastTimers(false)}>\n              Hide\n            </ToggleButton>\n          </PastTimersHeader>\n\n          <PastTimersList>\n            {pastTimers.map(timer => (\n              <PastTimerItem key={timer._id}>\n                <PastTimerInfo>\n                  <PastTimerProject>\n                    <ProjectColorDot color={timer.project.color} />\n                    {timer.project.name}\n                  </PastTimerProject>\n                  {timer.task && (\n                    <PastTimerTask>\n                      Task: {timer.task.name}\n                    </PastTimerTask>\n                  )}\n                  <PastTimerDescription>\n                    {timer.description}\n                  </PastTimerDescription>\n                  <PastTimerMeta>\n                    <div>Started: {new Date(timer.startTime).toLocaleString()}</div>\n                    <div>Duration: {formatTime(timer.duration)}</div>\n                  </PastTimerMeta>\n                </PastTimerInfo>\n                <PastTimerActions>\n                  <ContinueButton onClick={() => continueTimer(timer)}>\n                    <FiPlay size={16} />\n                    Continue\n                  </ContinueButton>\n                </PastTimerActions>\n              </PastTimerItem>\n            ))}\n          </PastTimersList>\n        </PastTimersCard>\n      )}\n\n      {showPastTimers && pastTimers.length === 0 && (\n        <EmptyPastTimers>\n          No past timers found. Your tracked time will appear here.\n        </EmptyPastTimers>\n      )}\n    </TimerContainer>\n  );\n};\n\nexport default Timer;\n"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6B,IAAA,GAlCID,WAAW;AAoCjB,MAAME,eAAe,GAAGrD,MAAM,CAACiC,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,IAAA,GAXID,eAAe;AAarB,MAAME,WAAW,GAAGvD,MAAM,CAACY,GAAG;AAC9B;AACA;AACA;AACA;AACA,WAAWK,KAAK,IAAIA,KAAK,CAAC8B,SAAS,GAAG,SAAS,GAAG,SAAS;AAC3D,CAAC;AAACS,IAAA,GANID,WAAW;AAQjB,MAAME,cAAc,GAAGzD,MAAM,CAACY,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8C,IAAA,GANID,cAAc;AAQpB,MAAME,gBAAgB,GAAG3D,MAAM,CAACY,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgD,IAAA,GAPID,gBAAgB;AAStB,MAAME,eAAe,GAAG7D,MAAM,CAAC8D,EAAE;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,eAAe;AAOrB,MAAMG,YAAY,GAAGhE,MAAM,CAACuB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0C,IAAA,GAdID,YAAY;AAgBlB,MAAME,cAAc,GAAGlE,MAAM,CAACY,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuD,IAAA,GANID,cAAc;AAQpB,MAAME,aAAa,GAAGpE,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyD,IAAA,GAdID,aAAa;AAgBnB,MAAME,aAAa,GAAGtE,MAAM,CAACY,GAAG;AAChC;AACA;AACA,CAAC;AAAC2D,IAAA,GAHID,aAAa;AAKnB,MAAME,gBAAgB,GAAGxE,MAAM,CAACY,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6D,IAAA,GAPID,gBAAgB;AAStB,MAAME,aAAa,GAAG1E,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAAC+D,IAAA,GAJID,aAAa;AAMnB,MAAME,oBAAoB,GAAG5E,MAAM,CAACY,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiE,IAAA,GAPID,oBAAoB;AAS1B,MAAME,aAAa,GAAG9E,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACmE,IAAA,GALID,aAAa;AAOnB,MAAME,gBAAgB,GAAGhF,MAAM,CAACY,GAAG;AACnC;AACA;AACA;AACA;AACA,CAAC;AAACqE,IAAA,GALID,gBAAgB;AAOtB,MAAME,iBAAiB,GAAGlF,MAAM,CAACY,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMuE,cAAc,GAAGnF,MAAM,CAACuB,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6D,IAAA,GAxBID,cAAc;AA0BpB,MAAME,eAAe,GAAGrF,MAAM,CAACY,GAAG;AAClC;AACA;AACA;AACA,gBAAgBK,KAAK,IAAIA,KAAK,CAACqE,KAAK,IAAI,SAAS;AACjD,CAAC;AAACC,IAAA,GALIF,eAAe;AAOrB,MAAMG,eAAe,GAAGxF,MAAM,CAACY,GAAG;AAClC;AACA;AACA;AACA;AACA,CAAC;AAAC6E,IAAA,GALID,eAAe;AAOrB,MAAME,gBAAgB,GAAG1F,MAAM,CAAC2F,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,kBAAA;EAClB,MAAM,CAAC7E,SAAS,EAAE8E,YAAY,CAAC,GAAGlG,QAAQ,CAAC,KAAK,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}