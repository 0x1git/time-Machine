{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codes\\\\My Projects\\\\time-Machine\\\\time-tracker\\\\frontend\\\\src\\\\components\\\\timer\\\\Timer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { FiPlay, FiPause, FiSquare, FiClock, FiCoffee, FiCheckCircle } from \"react-icons/fi\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimerContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n_c = TimerContainer;\nconst TimerCard = styled.div`\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  padding: 48px;\n  text-align: center;\n  margin-bottom: 32px;\n`;\n_c2 = TimerCard;\nconst TimerDisplay = styled.div`\n  font-size: 4rem;\n  font-weight: 700;\n  color: ${props => props.isRunning ? \"#28a745\" : \"#2c3e50\"};\n  font-family: \"Courier New\", monospace;\n  margin-bottom: 32px;\n  letter-spacing: 2px;\n\n  @media (max-width: 768px) {\n    font-size: 3rem;\n  }\n`;\n_c3 = TimerDisplay;\nconst TimerControls = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  margin-bottom: 32px;\n`;\n_c4 = TimerControls;\nconst ControlButton = styled.button`\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 24px;\n\n  &.primary {\n    background: ${props => props.isRunning ? \"#dc3545\" : \"#28a745\"};\n    color: white;\n\n    &:hover {\n      background: ${props => props.isRunning ? \"#c82333\" : \"#218838\"};\n      transform: scale(1.05);\n    }\n  }\n\n  &.secondary {\n    background: #6c757d;\n    color: white;\n\n    &:hover {\n      background: #5a6268;\n      transform: scale(1.05);\n    }\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c5 = ControlButton;\nconst TimerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n_c6 = TimerForm;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n`;\n_c7 = FormGroup;\nconst Label = styled.label`\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #374151;\n`;\n_c8 = Label;\nconst Select = styled.select`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n_c9 = Select;\nconst Input = styled.input`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\nconst Textarea = styled.textarea`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  resize: vertical;\n  min-height: 80px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n_c0 = Textarea;\nconst CurrentActivity = styled.div`\n  background: #e3f2fd;\n  border: 1px solid #2196f3;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n  text-align: left;\n`;\n_c1 = CurrentActivity;\nconst ActivityTitle = styled.div`\n  font-weight: 600;\n  color: #1976d2;\n  margin-bottom: 8px;\n`;\n_c10 = ActivityTitle;\nconst ActivityMeta = styled.div`\n  color: #666;\n  font-size: 14px;\n`;\n_c11 = ActivityMeta;\nconst BreakCard = styled.div`\n  background: ${props => props.isOnBreak ? \"#fff3cd\" : \"#f8f9fa\"};\n  border: 1px solid ${props => props.isOnBreak ? \"#ffeaa7\" : \"#e9ecef\"};\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n  text-align: left;\n`;\n_c12 = BreakCard;\nconst BreakControls = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 16px;\n  align-items: center;\n`;\n_c13 = BreakControls;\nconst BreakButton = styled.button`\n  padding: 8px 16px;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &.start-break {\n    background: #ff6b35;\n    color: white;\n\n    &:hover {\n      background: #e55a2b;\n    }\n  }\n\n  &.end-break {\n    background: #28a745;\n    color: white;\n\n    &:hover {\n      background: #218838;\n    }\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n_c14 = BreakButton;\nconst BreakTypeSelect = styled.select`\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n_c15 = BreakTypeSelect;\nconst BreakStatus = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  color: ${props => props.isOnBreak ? \"#d68910\" : \"#28a745\"};\n`;\n_c16 = BreakStatus;\nconst PastTimersCard = styled.div`\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  padding: 32px;\n  margin-bottom: 32px;\n`;\n_c17 = PastTimersCard;\nconst PastTimersHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #e9ecef;\n`;\n_c18 = PastTimersHeader;\nconst PastTimersTitle = styled.h3`\n  margin: 0;\n  color: #2c3e50;\n  font-size: 1.25rem;\n  font-weight: 600;\n`;\n_c19 = PastTimersTitle;\nconst ToggleButton = styled.button`\n  background: none;\n  border: none;\n  color: #6c757d;\n  cursor: pointer;\n  font-size: 14px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f8f9fa;\n    color: #495057;\n  }\n`;\n_c20 = ToggleButton;\nconst PastTimersList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n_c21 = PastTimersList;\nconst PastTimerItem = styled.div`\n  display: flex;\n  justify-content: between;\n  align-items: center;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #e9ecef;\n    border-color: #d1d5db;\n  }\n`;\n_c22 = PastTimerItem;\nconst PastTimerInfo = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n_c23 = PastTimerInfo;\nconst PastTimerProject = styled.div`\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 4px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c24 = PastTimerProject;\nconst PastTimerTask = styled.div`\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 4px;\n`;\n_c25 = PastTimerTask;\nconst PastTimerDescription = styled.div`\n  font-size: 14px;\n  color: #6c757d;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 4px;\n`;\n_c26 = PastTimerDescription;\nconst PastTimerMeta = styled.div`\n  font-size: 12px;\n  color: #9ca3af;\n  display: flex;\n  gap: 16px;\n`;\n_c27 = PastTimerMeta;\nconst PastTimerActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-left: 16px;\n`;\n_c28 = PastTimerActions;\nconst PastTimerDuration = styled.div`\n  font-family: \"Courier New\", monospace;\n  font-weight: 600;\n  color: #28a745;\n  font-size: 14px;\n  text-align: right;\n  min-width: 80px;\n`;\n_c29 = PastTimerDuration;\nconst ContinueButton = styled.button`\n  padding: 8px 16px;\n  background: #28a745;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  &:hover {\n    background: #218838;\n    transform: translateY(-1px);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c30 = ContinueButton;\nconst ProjectColorDot = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color || \"#6c757d\"};\n`;\n_c31 = ProjectColorDot;\nconst EmptyPastTimers = styled.div`\n  text-align: center;\n  padding: 32px;\n  color: #6c757d;\n  font-style: italic;\n`;\n_c32 = EmptyPastTimers;\nconst TotalTimeDisplay = styled.span`\n  font-size: 12px;\n  background: #e3f2fd;\n  color: #1976d2;\n  padding: 2px 8px;\n  border-radius: 12px;\n  margin-left: 8px;\n`;\n\n// Timeline components\n_c33 = TotalTimeDisplay;\nconst TimelineContainer = styled.div`\n  margin-top: 24px;\n  border-top: 1px solid #e9ecef;\n  padding-top: 24px;\n`;\n_c34 = TimelineContainer;\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n_c35 = TimelineHeader;\nconst TimelineTitle = styled.h4`\n  margin: 0;\n  color: #2c3e50;\n  font-size: 1rem;\n  font-weight: 600;\n`;\n_c36 = TimelineTitle;\nconst ProjectFilter = styled.select`\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n  margin-left: 12px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n_c37 = ProjectFilter;\nconst TimelineView = styled.div`\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 16px;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n_c38 = TimelineView;\nconst TimelineDay = styled.div`\n  margin-bottom: 24px;\n`;\n_c39 = TimelineDay;\nconst TimelineDayHeader = styled.div`\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #dee2e6;\n`;\n_c40 = TimelineDayHeader;\nconst TimelineEntry = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  padding: 8px;\n  background: white;\n  border-radius: 6px;\n  border-left: 4px solid\n    ${props => props.isBreak ? \"#ff6b35\" : props.color || \"#28a745\"};\n`;\n_c41 = TimelineEntry;\nconst TimelineTime = styled.div`\n  font-family: \"Courier New\", monospace;\n  font-size: 12px;\n  color: #666;\n  min-width: 120px;\n`;\n_c42 = TimelineTime;\nconst TimelineContent = styled.div`\n  flex: 1;\n  margin-left: 12px;\n`;\n_c43 = TimelineContent;\nconst TimelineProject = styled.div`\n  font-weight: 500;\n  color: #2c3e50;\n  font-size: 14px;\n`;\n_c44 = TimelineProject;\nconst TimelineDuration = styled.div`\n  font-family: \"Courier New\", monospace;\n  font-size: 12px;\n  color: #666;\n  margin-left: 12px;\n  min-width: 60px;\n  text-align: right;\n`;\n_c45 = TimelineDuration;\nconst TimelineDescription = styled.div`\n  font-size: 12px;\n  color: #6c757d;\n  margin-top: 2px;\n`;\n_c46 = TimelineDescription;\nconst EmptyTimeline = styled.div`\n  text-align: center;\n  padding: 32px;\n  color: #6c757d;\n  font-style: italic;\n`;\n\n// Component for displaying total time\n_c47 = EmptyTimeline;\nconst TotalTimeForProject = ({\n  projectId,\n  taskId\n}) => {\n  _s();\n  const [totalTime, setTotalTime] = useState(\"00:00:00\");\n  useEffect(() => {\n    const fetchTotalTime = async () => {\n      try {\n        const params = new URLSearchParams({\n          project: projectId,\n          limit: 1000\n        });\n        if (taskId) params.append(\"task\", taskId);\n        const response = await axios.get(`/time-entries?${params}`);\n        const totalSeconds = response.data.timeEntries.reduce((total, entry) => total + entry.duration, 0);\n        setTotalTime(formatTime(totalSeconds));\n      } catch (error) {\n        console.error(\"Error calculating total time:\", error);\n        setTotalTime(\"00:00:00\");\n      }\n    };\n    fetchTotalTime();\n  }, [projectId, taskId]);\n  return /*#__PURE__*/_jsxDEV(TotalTimeDisplay, {\n    children: [\"Total: \", totalTime]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 10\n  }, this);\n};\n_s(TotalTimeForProject, \"1SitA7iu2vE19tj/yKRYJqBCbxo=\");\n_c48 = TotalTimeForProject;\nconst formatTime = seconds => {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const secs = seconds % 60;\n  return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n};\nconst Timer = () => {\n  _s2();\n  var _runningEntry$project, _runningEntry$task;\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [runningEntry, setRunningEntry] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [activeBreak, setActiveBreak] = useState(null);\n  const [breakType, setBreakType] = useState(\"other\");\n  const [pastTimers, setPastTimers] = useState([]);\n  const [showPastTimers, setShowPastTimers] = useState(true);\n  const [formData, setFormData] = useState({\n    project: \"\",\n    task: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    fetchProjects();\n    checkRunningTimer();\n    checkActiveBreak();\n    fetchPastTimers();\n  }, []);\n  useEffect(() => {\n    if (formData.project) {\n      fetchTasks(formData.project);\n    } else {\n      setTasks([]);\n    }\n  }, [formData.project]);\n  useEffect(() => {\n    let interval;\n    if (isRunning && runningEntry) {\n      interval = setInterval(() => {\n        const startTime = new Date(runningEntry.startTime);\n        const now = new Date();\n        setElapsedTime(Math.floor((now - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, runningEntry]);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(\"/projects\");\n      setProjects(response.data);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    }\n  };\n  const fetchTasks = async projectId => {\n    try {\n      const response = await axios.get(`/tasks?project=${projectId}`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n  const checkRunningTimer = async () => {\n    try {\n      const response = await axios.get(\"/time-entries/running\");\n      if (response.data) {\n        var _response$data$task;\n        setRunningEntry(response.data);\n        setIsRunning(true);\n        const startTime = new Date(response.data.startTime);\n        const now = new Date();\n        setElapsedTime(Math.floor((now - startTime) / 1000));\n\n        // Populate form with running entry data\n        setFormData({\n          project: response.data.project._id,\n          task: ((_response$data$task = response.data.task) === null || _response$data$task === void 0 ? void 0 : _response$data$task._id) || \"\",\n          description: response.data.description || \"\"\n        });\n      }\n    } catch (error) {\n      // No running timer\n    }\n  };\n  const checkActiveBreak = async () => {\n    try {\n      const response = await axios.get(\"/breaks/active\");\n      setActiveBreak(response.data);\n    } catch (error) {\n      // No active break\n    }\n  };\n  const startTimer = async () => {\n    if (!formData.project) {\n      toast.error(\"Please select a project\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"/time-entries\", {\n        project: formData.project,\n        task: formData.task || null,\n        description: formData.description,\n        startTime: new Date().toISOString(),\n        duration: 0\n      });\n      setRunningEntry(response.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n      toast.success(\"Timer started!\");\n    } catch (error) {\n      toast.error(\"Failed to start timer\");\n      console.error(\"Error starting timer:\", error);\n    }\n  };\n  const stopTimer = async () => {\n    if (!runningEntry) return;\n    try {\n      await axios.post(`/time-entries/${runningEntry._id}/stop`);\n      setIsRunning(false);\n      setRunningEntry(null);\n      setElapsedTime(0);\n      setFormData({\n        project: \"\",\n        task: \"\",\n        description: \"\"\n      });\n      fetchPastTimers(); // Refresh past timers after stopping\n      toast.success(\"Timer stopped!\");\n    } catch (error) {\n      toast.error(\"Failed to stop timer\");\n      console.error(\"Error stopping timer:\", error);\n    }\n  };\n  const updateDescription = async () => {\n    if (!runningEntry) return;\n    try {\n      await axios.put(`/time-entries/${runningEntry._id}`, {\n        description: formData.description\n      });\n      toast.success(\"Description updated!\");\n    } catch (error) {\n      toast.error(\"Failed to update description\");\n      console.error(\"Error updating description:\", error);\n    }\n  };\n  const startBreak = async () => {\n    if (!runningEntry) {\n      toast.error(\"No active timer to start break on\");\n      return;\n    }\n    try {\n      // First stop the current timer to save the work done so far\n      await axios.post(`/time-entries/${runningEntry._id}/stop`);\n\n      // Then start the break\n      const response = await axios.post(\"/breaks/start\", {\n        timeEntryId: runningEntry._id,\n        breakType: breakType\n      });\n\n      // Update state - timer is stopped, break is active\n      setIsRunning(false);\n      setElapsedTime(0);\n      setActiveBreak(response.data);\n\n      // Keep the runningEntry reference for potential resume\n      // but mark it as not running\n      setRunningEntry(prev => ({\n        ...prev,\n        isRunning: false\n      }));\n      fetchPastTimers(); // Refresh past timers since we stopped current one\n\n      toast.success(`${breakType.charAt(0).toUpperCase() + breakType.slice(1)} break started! Timer stopped and saved.`);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to start break\");\n      console.error(\"Error starting break:\", error);\n    }\n  };\n  const endBreak = async () => {\n    if (!activeBreak) return;\n    try {\n      await axios.put(`/breaks/end/${activeBreak._id}`);\n      setActiveBreak(null);\n\n      // Clear the stopped timer reference since break is ended\n      setRunningEntry(null);\n      setFormData({\n        project: \"\",\n        task: \"\",\n        description: \"\"\n      });\n      toast.success(\"Break ended! You can now start a new timer or resume previous work.\");\n    } catch (error) {\n      toast.error(\"Failed to end break\");\n      console.error(\"Error ending break:\", error);\n    }\n  };\n  const continueTimer = async pastEntry => {\n    if (isRunning) {\n      toast.error(\"Please stop the current timer first\");\n      return;\n    }\n    try {\n      var _pastEntry$task, _pastEntry$task2;\n      // Start a new timer with the same project, task, and description\n      const response = await axios.post(\"/time-entries\", {\n        project: pastEntry.project._id,\n        task: ((_pastEntry$task = pastEntry.task) === null || _pastEntry$task === void 0 ? void 0 : _pastEntry$task._id) || null,\n        description: pastEntry.description || \"\",\n        startTime: new Date().toISOString(),\n        duration: 0\n      });\n      setRunningEntry(response.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n\n      // Update form data\n      setFormData({\n        project: pastEntry.project._id,\n        task: ((_pastEntry$task2 = pastEntry.task) === null || _pastEntry$task2 === void 0 ? void 0 : _pastEntry$task2._id) || \"\",\n        description: pastEntry.description || \"\"\n      });\n\n      // Fetch tasks for the selected project\n      if (pastEntry.project._id) {\n        fetchTasks(pastEntry.project._id);\n      }\n      toast.success(\"Timer continued!\");\n    } catch (error) {\n      toast.error(\"Failed to continue timer\");\n      console.error(\"Error continuing timer:\", error);\n    }\n  };\n  const fetchPastTimers = async () => {\n    try {\n      const response = await axios.get(\"/time-entries?limit=20\");\n      // Filter out currently running timer\n      const pastEntries = response.data.timeEntries.filter(entry => !entry.isRunning);\n\n      // Group by project+task combination and keep only the most recent entry for each combination\n      const grouped = {};\n      pastEntries.forEach(entry => {\n        var _entry$task;\n        const key = `${entry.project._id}-${((_entry$task = entry.task) === null || _entry$task === void 0 ? void 0 : _entry$task._id) || \"notask\"}`;\n        if (!grouped[key] || new Date(entry.startTime) > new Date(grouped[key].startTime)) {\n          grouped[key] = entry;\n        }\n      });\n\n      // Convert back to array and sort by most recent\n      const uniqueEntries = Object.values(grouped).sort((a, b) => new Date(b.startTime) - new Date(a.startTime)).slice(0, 10); // Keep only top 10\n\n      setPastTimers(uniqueEntries);\n    } catch (error) {\n      console.error(\"Error fetching past timers:\", error);\n    }\n  };\n  const handleFormChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    if (field === \"description\" && runningEntry) {\n      // Debounce description updates\n      clearTimeout(window.descriptionTimeout);\n      window.descriptionTimeout = setTimeout(updateDescription, 1000);\n    }\n  };\n  const resumeLastTask = async () => {\n    if (isRunning) {\n      toast.error(\"Please stop the current timer first\");\n      return;\n    }\n    try {\n      var _lastEntry$task, _lastEntry$task2;\n      // Get the most recent completed time entry\n      const response = await axios.get('/time-entries?limit=1');\n      const lastEntry = response.data.timeEntries[0];\n      if (!lastEntry) {\n        toast.error(\"No previous task to resume\");\n        return;\n      }\n\n      // Start a new timer with the same project, task, and description\n      const newTimerResponse = await axios.post('/time-entries', {\n        project: lastEntry.project._id,\n        task: ((_lastEntry$task = lastEntry.task) === null || _lastEntry$task === void 0 ? void 0 : _lastEntry$task._id) || null,\n        description: lastEntry.description || '',\n        startTime: new Date().toISOString(),\n        duration: 0\n      });\n      setRunningEntry(newTimerResponse.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n\n      // Update form data\n      setFormData({\n        project: lastEntry.project._id,\n        task: ((_lastEntry$task2 = lastEntry.task) === null || _lastEntry$task2 === void 0 ? void 0 : _lastEntry$task2._id) || '',\n        description: lastEntry.description || ''\n      });\n\n      // Fetch tasks for the selected project\n      if (lastEntry.project._id) {\n        fetchTasks(lastEntry.project._id);\n      }\n      toast.success(`Resumed: ${lastEntry.project.name}${lastEntry.task ? ` - ${lastEntry.task.name}` : ''}`);\n    } catch (error) {\n      toast.error('Failed to resume last task');\n      console.error('Error resuming last task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TimerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(PastTimersCard, {\n      children: [/*#__PURE__*/_jsxDEV(PastTimersHeader, {\n        children: [/*#__PURE__*/_jsxDEV(PastTimersTitle, {\n          children: \"Recent Timers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          onClick: () => setShowPastTimers(!showPastTimers),\n          children: showPastTimers ? \"Hide\" : \"Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 9\n      }, this), showPastTimers && /*#__PURE__*/_jsxDEV(PastTimersList, {\n        children: pastTimers.length > 0 ? pastTimers.map(timer => {\n          var _timer$project, _timer$project2, _timer$task;\n          return /*#__PURE__*/_jsxDEV(PastTimerItem, {\n            children: [/*#__PURE__*/_jsxDEV(PastTimerInfo, {\n              children: [/*#__PURE__*/_jsxDEV(PastTimerProject, {\n                children: [/*#__PURE__*/_jsxDEV(ProjectColorDot, {\n                  color: (_timer$project = timer.project) === null || _timer$project === void 0 ? void 0 : _timer$project.color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 901,\n                  columnNumber: 23\n                }, this), (_timer$project2 = timer.project) === null || _timer$project2 === void 0 ? void 0 : _timer$project2.name, /*#__PURE__*/_jsxDEV(TotalTimeForProject, {\n                  projectId: timer.project._id,\n                  taskId: (_timer$task = timer.task) === null || _timer$task === void 0 ? void 0 : _timer$task._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 21\n              }, this), timer.task && /*#__PURE__*/_jsxDEV(PastTimerTask, {\n                children: [\"Task: \", timer.task.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 23\n              }, this), timer.description && /*#__PURE__*/_jsxDEV(PastTimerDescription, {\n                title: timer.description,\n                children: timer.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(PastTimerMeta, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [new Date(timer.startTime).toLocaleDateString(), \" \\u2022\", new Date(timer.startTime).toLocaleTimeString(), \" -\", timer.endTime && new Date(timer.endTime).toLocaleTimeString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 917,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 916,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PastTimerActions, {\n              children: [/*#__PURE__*/_jsxDEV(PastTimerDuration, {\n                children: formatTime(timer.duration)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ContinueButton, {\n                onClick: () => continueTimer(timer),\n                disabled: isRunning,\n                children: [/*#__PURE__*/_jsxDEV(FiPlay, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 933,\n                  columnNumber: 23\n                }, this), \"Continue\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 19\n            }, this)]\n          }, timer._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(EmptyPastTimers, {\n          children: \"No past timers found. Start your first timer below!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerCard, {\n      children: [/*#__PURE__*/_jsxDEV(TimerDisplay, {\n        isRunning: isRunning,\n        children: formatTime(elapsedTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimerControls, {\n        children: /*#__PURE__*/_jsxDEV(ControlButton, {\n          className: \"primary\",\n          isRunning: isRunning,\n          onClick: isRunning ? stopTimer : startTimer,\n          disabled: !isRunning && !formData.project,\n          children: isRunning ? /*#__PURE__*/_jsxDEV(FiPause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(FiPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 9\n      }, this), \" \", runningEntry && /*#__PURE__*/_jsxDEV(CurrentActivity, {\n        children: [/*#__PURE__*/_jsxDEV(ActivityTitle, {\n          children: [/*#__PURE__*/_jsxDEV(FiClock, {\n            style: {\n              marginRight: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 15\n          }, this), \"Currently tracking: \", (_runningEntry$project = runningEntry.project) === null || _runningEntry$project === void 0 ? void 0 : _runningEntry$project.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ActivityMeta, {\n          children: [((_runningEntry$task = runningEntry.task) === null || _runningEntry$task === void 0 ? void 0 : _runningEntry$task.name) && `Task: ${runningEntry.task.name} • `, \"Started: \", new Date(runningEntry.startTime).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 11\n      }, this), runningEntry && /*#__PURE__*/_jsxDEV(BreakCard, {\n        isOnBreak: !!activeBreak,\n        children: [/*#__PURE__*/_jsxDEV(BreakStatus, {\n          isOnBreak: !!activeBreak,\n          children: [/*#__PURE__*/_jsxDEV(FiCoffee, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 15\n          }, this), activeBreak ? \"On Break\" : \"Ready for Break\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 13\n        }, this), activeBreak ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"8px\",\n              fontSize: \"14px\",\n              color: \"#666\"\n            },\n            children: [\"Break Type: \", activeBreak.breakType, \" \\u2022 Started:\", \" \", new Date(activeBreak.startTime).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BreakControls, {\n            children: /*#__PURE__*/_jsxDEV(BreakButton, {\n              className: \"end-break\",\n              onClick: endBreak,\n              children: [/*#__PURE__*/_jsxDEV(FiCheckCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 21\n              }, this), \"End Break\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(BreakControls, {\n          children: [/*#__PURE__*/_jsxDEV(BreakTypeSelect, {\n            value: breakType,\n            onChange: e => setBreakType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"coffee\",\n              children: \"Coffee Break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lunch\",\n              children: \"Lunch Break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"personal\",\n              children: \"Personal Break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"meeting\",\n              children: \"Meeting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BreakButton, {\n            className: \"start-break\",\n            onClick: startBreak,\n            children: [/*#__PURE__*/_jsxDEV(FiCoffee, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 19\n            }, this), \"Start Break\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 11\n      }, this), !isRunning && !activeBreak && /*#__PURE__*/_jsxDEV(BreakCard, {\n        children: [/*#__PURE__*/_jsxDEV(BreakStatus, {\n          children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 15\n          }, this), \"Quick Actions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BreakControls, {\n          children: /*#__PURE__*/_jsxDEV(BreakButton, {\n            className: \"end-break\",\n            onClick: resumeLastTask,\n            children: [/*#__PURE__*/_jsxDEV(FiPlay, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 17\n            }, this), \"Resume Last Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TimerForm, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Project *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: formData.project,\n            onChange: e => handleFormChange(\"project\", e.target.value),\n            disabled: isRunning,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 15\n            }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: project._id,\n              children: project.name\n            }, project._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Task (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: formData.task,\n            onChange: e => handleFormChange(\"task\", e.target.value),\n            disabled: isRunning || !formData.project,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 15\n            }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: task._id,\n              children: task.name\n            }, task._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n            value: formData.description,\n            onChange: e => handleFormChange(\"description\", e.target.value),\n            placeholder: \"What are you working on?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 7\n    }, this), showPastTimers && pastTimers.length === 0 && /*#__PURE__*/_jsxDEV(EmptyPastTimers, {\n      children: \"No past timers found. Your tracked time will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TimelineContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TimelineHeader, {\n        children: [/*#__PURE__*/_jsxDEV(TimelineTitle, {\n          children: \"Timeline View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProjectFilter, {\n          onChange: e => setSelectedProject(e.target.value),\n          value: selectedProject,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 13\n          }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: project._id,\n            children: project.name\n          }, project._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimelineView, {\n        children: Object.keys(groupedEntries).length === 0 ? /*#__PURE__*/_jsxDEV(EmptyTimeline, {\n          children: \"No time entries found for the selected project.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 13\n        }, this) : Object.entries(groupedEntries).map(([date, entries]) => /*#__PURE__*/_jsxDEV(TimelineDay, {\n          children: [/*#__PURE__*/_jsxDEV(TimelineDayHeader, {\n            children: new Date(date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 17\n          }, this), entries.map(entry => /*#__PURE__*/_jsxDEV(TimelineEntry, {\n            color: entry.project.color,\n            isBreak: entry.isBreak,\n            children: [/*#__PURE__*/_jsxDEV(TimelineTime, {\n              children: formatTime(entry.duration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TimelineContent, {\n              children: [/*#__PURE__*/_jsxDEV(TimelineProject, {\n                children: [/*#__PURE__*/_jsxDEV(ProjectColorDot, {\n                  color: entry.project.color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1116,\n                  columnNumber: 25\n                }, this), entry.project.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TimelineDescription, {\n                children: entry.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TimelineDuration, {\n              children: formatTime(entry.duration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 21\n            }, this)]\n          }, entry._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 19\n          }, this))]\n        }, date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 884,\n    columnNumber: 5\n  }, this);\n};\n_s2(Timer, \"XKhE/8VDRMJYxt90npWa8tRm+aQ=\");\n_c49 = Timer;\nexport default Timer;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36, _c37, _c38, _c39, _c40, _c41, _c42, _c43, _c44, _c45, _c46, _c47, _c48, _c49;\n$RefreshReg$(_c, \"TimerContainer\");\n$RefreshReg$(_c2, \"TimerCard\");\n$RefreshReg$(_c3, \"TimerDisplay\");\n$RefreshReg$(_c4, \"TimerControls\");\n$RefreshReg$(_c5, \"ControlButton\");\n$RefreshReg$(_c6, \"TimerForm\");\n$RefreshReg$(_c7, \"FormGroup\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"Select\");\n$RefreshReg$(_c0, \"Textarea\");\n$RefreshReg$(_c1, \"CurrentActivity\");\n$RefreshReg$(_c10, \"ActivityTitle\");\n$RefreshReg$(_c11, \"ActivityMeta\");\n$RefreshReg$(_c12, \"BreakCard\");\n$RefreshReg$(_c13, \"BreakControls\");\n$RefreshReg$(_c14, \"BreakButton\");\n$RefreshReg$(_c15, \"BreakTypeSelect\");\n$RefreshReg$(_c16, \"BreakStatus\");\n$RefreshReg$(_c17, \"PastTimersCard\");\n$RefreshReg$(_c18, \"PastTimersHeader\");\n$RefreshReg$(_c19, \"PastTimersTitle\");\n$RefreshReg$(_c20, \"ToggleButton\");\n$RefreshReg$(_c21, \"PastTimersList\");\n$RefreshReg$(_c22, \"PastTimerItem\");\n$RefreshReg$(_c23, \"PastTimerInfo\");\n$RefreshReg$(_c24, \"PastTimerProject\");\n$RefreshReg$(_c25, \"PastTimerTask\");\n$RefreshReg$(_c26, \"PastTimerDescription\");\n$RefreshReg$(_c27, \"PastTimerMeta\");\n$RefreshReg$(_c28, \"PastTimerActions\");\n$RefreshReg$(_c29, \"PastTimerDuration\");\n$RefreshReg$(_c30, \"ContinueButton\");\n$RefreshReg$(_c31, \"ProjectColorDot\");\n$RefreshReg$(_c32, \"EmptyPastTimers\");\n$RefreshReg$(_c33, \"TotalTimeDisplay\");\n$RefreshReg$(_c34, \"TimelineContainer\");\n$RefreshReg$(_c35, \"TimelineHeader\");\n$RefreshReg$(_c36, \"TimelineTitle\");\n$RefreshReg$(_c37, \"ProjectFilter\");\n$RefreshReg$(_c38, \"TimelineView\");\n$RefreshReg$(_c39, \"TimelineDay\");\n$RefreshReg$(_c40, \"TimelineDayHeader\");\n$RefreshReg$(_c41, \"TimelineEntry\");\n$RefreshReg$(_c42, \"TimelineTime\");\n$RefreshReg$(_c43, \"TimelineContent\");\n$RefreshReg$(_c44, \"TimelineProject\");\n$RefreshReg$(_c45, \"TimelineDuration\");\n$RefreshReg$(_c46, \"TimelineDescription\");\n$RefreshReg$(_c47, \"EmptyTimeline\");\n$RefreshReg$(_c48, \"TotalTimeForProject\");\n$RefreshReg$(_c49, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","styled","FiPlay","FiPause","FiSquare","FiClock","FiCoffee","FiCheckCircle","axios","toast","jsxDEV","_jsxDEV","TimerContainer","div","_c","TimerCard","_c2","TimerDisplay","props","isRunning","_c3","TimerControls","_c4","ControlButton","button","_c5","TimerForm","_c6","FormGroup","_c7","Label","label","_c8","Select","select","_c9","Input","input","Textarea","textarea","_c0","CurrentActivity","_c1","ActivityTitle","_c10","ActivityMeta","_c11","BreakCard","isOnBreak","_c12","BreakControls","_c13","BreakButton","_c14","BreakTypeSelect","_c15","BreakStatus","_c16","PastTimersCard","_c17","PastTimersHeader","_c18","PastTimersTitle","h3","_c19","ToggleButton","_c20","PastTimersList","_c21","PastTimerItem","_c22","PastTimerInfo","_c23","PastTimerProject","_c24","PastTimerTask","_c25","PastTimerDescription","_c26","PastTimerMeta","_c27","PastTimerActions","_c28","PastTimerDuration","_c29","ContinueButton","_c30","ProjectColorDot","color","_c31","EmptyPastTimers","_c32","TotalTimeDisplay","span","_c33","TimelineContainer","_c34","TimelineHeader","_c35","TimelineTitle","h4","_c36","ProjectFilter","_c37","TimelineView","_c38","TimelineDay","_c39","TimelineDayHeader","_c40","TimelineEntry","isBreak","_c41","TimelineTime","_c42","TimelineContent","_c43","TimelineProject","_c44","TimelineDuration","_c45","TimelineDescription","_c46","EmptyTimeline","_c47","TotalTimeForProject","projectId","taskId","_s","totalTime","setTotalTime","fetchTotalTime","params","URLSearchParams","project","limit","append","response","get","totalSeconds","data","timeEntries","reduce","total","entry","duration","formatTime","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c48","seconds","hours","Math","floor","minutes","secs","toString","padStart","Timer","_s2","_runningEntry$project","_runningEntry$task","setIsRunning","elapsedTime","setElapsedTime","runningEntry","setRunningEntry","projects","setProjects","tasks","setTasks","activeBreak","setActiveBreak","breakType","setBreakType","pastTimers","setPastTimers","showPastTimers","setShowPastTimers","formData","setFormData","task","description","fetchProjects","checkRunningTimer","checkActiveBreak","fetchPastTimers","fetchTasks","interval","setInterval","startTime","Date","now","clearInterval","_response$data$task","_id","startTimer","post","toISOString","success","stopTimer","updateDescription","put","startBreak","timeEntryId","prev","charAt","toUpperCase","slice","_error$response","_error$response$data","message","endBreak","continueTimer","pastEntry","_pastEntry$task","_pastEntry$task2","pastEntries","filter","grouped","forEach","_entry$task","key","uniqueEntries","Object","values","sort","a","b","handleFormChange","field","value","clearTimeout","window","descriptionTimeout","setTimeout","resumeLastTask","_lastEntry$task","_lastEntry$task2","lastEntry","newTimerResponse","name","onClick","length","map","timer","_timer$project","_timer$project2","_timer$task","title","toLocaleDateString","toLocaleTimeString","endTime","disabled","size","className","style","marginRight","marginTop","fontSize","onChange","e","target","placeholder","setSelectedProject","selectedProject","keys","groupedEntries","entries","date","_c49","$RefreshReg$"],"sources":["D:/Codes/My Projects/time-Machine/time-tracker/frontend/src/components/timer/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  FiPlay,\n  FiPause,\n  FiSquare,\n  FiClock,\n  FiCoffee,\n  FiCheckCircle,\n} from \"react-icons/fi\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst TimerContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst TimerCard = styled.div`\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  padding: 48px;\n  text-align: center;\n  margin-bottom: 32px;\n`;\n\nconst TimerDisplay = styled.div`\n  font-size: 4rem;\n  font-weight: 700;\n  color: ${(props) => (props.isRunning ? \"#28a745\" : \"#2c3e50\")};\n  font-family: \"Courier New\", monospace;\n  margin-bottom: 32px;\n  letter-spacing: 2px;\n\n  @media (max-width: 768px) {\n    font-size: 3rem;\n  }\n`;\n\nconst TimerControls = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  margin-bottom: 32px;\n`;\n\nconst ControlButton = styled.button`\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 24px;\n\n  &.primary {\n    background: ${(props) => (props.isRunning ? \"#dc3545\" : \"#28a745\")};\n    color: white;\n\n    &:hover {\n      background: ${(props) => (props.isRunning ? \"#c82333\" : \"#218838\")};\n      transform: scale(1.05);\n    }\n  }\n\n  &.secondary {\n    background: #6c757d;\n    color: white;\n\n    &:hover {\n      background: #5a6268;\n      transform: scale(1.05);\n    }\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst TimerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: #374151;\n`;\n\nconst Select = styled.select`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n\nconst Textarea = styled.textarea`\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  resize: vertical;\n  min-height: 80px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n  }\n`;\n\nconst CurrentActivity = styled.div`\n  background: #e3f2fd;\n  border: 1px solid #2196f3;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n  text-align: left;\n`;\n\nconst ActivityTitle = styled.div`\n  font-weight: 600;\n  color: #1976d2;\n  margin-bottom: 8px;\n`;\n\nconst ActivityMeta = styled.div`\n  color: #666;\n  font-size: 14px;\n`;\n\nconst BreakCard = styled.div`\n  background: ${(props) => (props.isOnBreak ? \"#fff3cd\" : \"#f8f9fa\")};\n  border: 1px solid ${(props) => (props.isOnBreak ? \"#ffeaa7\" : \"#e9ecef\")};\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 24px;\n  text-align: left;\n`;\n\nconst BreakControls = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 16px;\n  align-items: center;\n`;\n\nconst BreakButton = styled.button`\n  padding: 8px 16px;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &.start-break {\n    background: #ff6b35;\n    color: white;\n\n    &:hover {\n      background: #e55a2b;\n    }\n  }\n\n  &.end-break {\n    background: #28a745;\n    color: white;\n\n    &:hover {\n      background: #218838;\n    }\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst BreakTypeSelect = styled.select`\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nconst BreakStatus = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  color: ${(props) => (props.isOnBreak ? \"#d68910\" : \"#28a745\")};\n`;\n\nconst PastTimersCard = styled.div`\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  padding: 32px;\n  margin-bottom: 32px;\n`;\n\nconst PastTimersHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #e9ecef;\n`;\n\nconst PastTimersTitle = styled.h3`\n  margin: 0;\n  color: #2c3e50;\n  font-size: 1.25rem;\n  font-weight: 600;\n`;\n\nconst ToggleButton = styled.button`\n  background: none;\n  border: none;\n  color: #6c757d;\n  cursor: pointer;\n  font-size: 14px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #f8f9fa;\n    color: #495057;\n  }\n`;\n\nconst PastTimersList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst PastTimerItem = styled.div`\n  display: flex;\n  justify-content: between;\n  align-items: center;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #e9ecef;\n    border-color: #d1d5db;\n  }\n`;\n\nconst PastTimerInfo = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst PastTimerProject = styled.div`\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 4px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst PastTimerTask = styled.div`\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 4px;\n`;\n\nconst PastTimerDescription = styled.div`\n  font-size: 14px;\n  color: #6c757d;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 4px;\n`;\n\nconst PastTimerMeta = styled.div`\n  font-size: 12px;\n  color: #9ca3af;\n  display: flex;\n  gap: 16px;\n`;\n\nconst PastTimerActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-left: 16px;\n`;\n\nconst PastTimerDuration = styled.div`\n  font-family: \"Courier New\", monospace;\n  font-weight: 600;\n  color: #28a745;\n  font-size: 14px;\n  text-align: right;\n  min-width: 80px;\n`;\n\nconst ContinueButton = styled.button`\n  padding: 8px 16px;\n  background: #28a745;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  &:hover {\n    background: #218838;\n    transform: translateY(-1px);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst ProjectColorDot = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${(props) => props.color || \"#6c757d\"};\n`;\n\nconst EmptyPastTimers = styled.div`\n  text-align: center;\n  padding: 32px;\n  color: #6c757d;\n  font-style: italic;\n`;\n\nconst TotalTimeDisplay = styled.span`\n  font-size: 12px;\n  background: #e3f2fd;\n  color: #1976d2;\n  padding: 2px 8px;\n  border-radius: 12px;\n  margin-left: 8px;\n`;\n\n// Timeline components\nconst TimelineContainer = styled.div`\n  margin-top: 24px;\n  border-top: 1px solid #e9ecef;\n  padding-top: 24px;\n`;\n\nconst TimelineHeader = styled.div`\n  display: flex;\n  justify-content: between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst TimelineTitle = styled.h4`\n  margin: 0;\n  color: #2c3e50;\n  font-size: 1rem;\n  font-weight: 600;\n`;\n\nconst ProjectFilter = styled.select`\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n  margin-left: 12px;\n\n  &:focus {\n    outline: none;\n    border-color: #3498db;\n  }\n`;\n\nconst TimelineView = styled.div`\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 16px;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst TimelineDay = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst TimelineDayHeader = styled.div`\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #dee2e6;\n`;\n\nconst TimelineEntry = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  padding: 8px;\n  background: white;\n  border-radius: 6px;\n  border-left: 4px solid\n    ${(props) => (props.isBreak ? \"#ff6b35\" : props.color || \"#28a745\")};\n`;\n\nconst TimelineTime = styled.div`\n  font-family: \"Courier New\", monospace;\n  font-size: 12px;\n  color: #666;\n  min-width: 120px;\n`;\n\nconst TimelineContent = styled.div`\n  flex: 1;\n  margin-left: 12px;\n`;\n\nconst TimelineProject = styled.div`\n  font-weight: 500;\n  color: #2c3e50;\n  font-size: 14px;\n`;\n\nconst TimelineDuration = styled.div`\n  font-family: \"Courier New\", monospace;\n  font-size: 12px;\n  color: #666;\n  margin-left: 12px;\n  min-width: 60px;\n  text-align: right;\n`;\n\nconst TimelineDescription = styled.div`\n  font-size: 12px;\n  color: #6c757d;\n  margin-top: 2px;\n`;\n\nconst EmptyTimeline = styled.div`\n  text-align: center;\n  padding: 32px;\n  color: #6c757d;\n  font-style: italic;\n`;\n\n// Component for displaying total time\nconst TotalTimeForProject = ({ projectId, taskId }) => {\n  const [totalTime, setTotalTime] = useState(\"00:00:00\");\n\n  useEffect(() => {\n    const fetchTotalTime = async () => {\n      try {\n        const params = new URLSearchParams({ project: projectId, limit: 1000 });\n        if (taskId) params.append(\"task\", taskId);\n\n        const response = await axios.get(`/time-entries?${params}`);\n        const totalSeconds = response.data.timeEntries.reduce(\n          (total, entry) => total + entry.duration,\n          0\n        );\n        setTotalTime(formatTime(totalSeconds));\n      } catch (error) {\n        console.error(\"Error calculating total time:\", error);\n        setTotalTime(\"00:00:00\");\n      }\n    };\n\n    fetchTotalTime();\n  }, [projectId, taskId]);\n\n  return <TotalTimeDisplay>Total: {totalTime}</TotalTimeDisplay>;\n};\n\nconst formatTime = (seconds) => {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const secs = seconds % 60;\n  return `${hours.toString().padStart(2, \"0\")}:${minutes\n    .toString()\n    .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n};\n\nconst Timer = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [runningEntry, setRunningEntry] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [activeBreak, setActiveBreak] = useState(null);\n  const [breakType, setBreakType] = useState(\"other\");\n  const [pastTimers, setPastTimers] = useState([]);\n  const [showPastTimers, setShowPastTimers] = useState(true);\n  const [formData, setFormData] = useState({\n    project: \"\",\n    task: \"\",\n    description: \"\",\n  });\n  useEffect(() => {\n    fetchProjects();\n    checkRunningTimer();\n    checkActiveBreak();\n    fetchPastTimers();\n  }, []);\n\n  useEffect(() => {\n    if (formData.project) {\n      fetchTasks(formData.project);\n    } else {\n      setTasks([]);\n    }\n  }, [formData.project]);\n\n  useEffect(() => {\n    let interval;\n    if (isRunning && runningEntry) {\n      interval = setInterval(() => {\n        const startTime = new Date(runningEntry.startTime);\n        const now = new Date();\n        setElapsedTime(Math.floor((now - startTime) / 1000));\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, runningEntry]);\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(\"/projects\");\n      setProjects(response.data);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    }\n  };\n\n  const fetchTasks = async (projectId) => {\n    try {\n      const response = await axios.get(`/tasks?project=${projectId}`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n\n  const checkRunningTimer = async () => {\n    try {\n      const response = await axios.get(\"/time-entries/running\");\n      if (response.data) {\n        setRunningEntry(response.data);\n        setIsRunning(true);\n        const startTime = new Date(response.data.startTime);\n        const now = new Date();\n        setElapsedTime(Math.floor((now - startTime) / 1000));\n\n        // Populate form with running entry data\n        setFormData({\n          project: response.data.project._id,\n          task: response.data.task?._id || \"\",\n          description: response.data.description || \"\",\n        });\n      }\n    } catch (error) {\n      // No running timer\n    }\n  };\n\n  const checkActiveBreak = async () => {\n    try {\n      const response = await axios.get(\"/breaks/active\");\n      setActiveBreak(response.data);\n    } catch (error) {\n      // No active break\n    }\n  };\n\n  const startTimer = async () => {\n    if (!formData.project) {\n      toast.error(\"Please select a project\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"/time-entries\", {\n        project: formData.project,\n        task: formData.task || null,\n        description: formData.description,\n        startTime: new Date().toISOString(),\n        duration: 0,\n      });\n\n      setRunningEntry(response.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n      toast.success(\"Timer started!\");\n    } catch (error) {\n      toast.error(\"Failed to start timer\");\n      console.error(\"Error starting timer:\", error);\n    }\n  };\n\n  const stopTimer = async () => {\n    if (!runningEntry) return;\n\n    try {\n      await axios.post(`/time-entries/${runningEntry._id}/stop`);\n      setIsRunning(false);\n      setRunningEntry(null);\n      setElapsedTime(0);\n      setFormData({ project: \"\", task: \"\", description: \"\" });\n      fetchPastTimers(); // Refresh past timers after stopping\n      toast.success(\"Timer stopped!\");\n    } catch (error) {\n      toast.error(\"Failed to stop timer\");\n      console.error(\"Error stopping timer:\", error);\n    }\n  };\n  const updateDescription = async () => {\n    if (!runningEntry) return;\n\n    try {\n      await axios.put(`/time-entries/${runningEntry._id}`, {\n        description: formData.description,\n      });\n      toast.success(\"Description updated!\");\n    } catch (error) {\n      toast.error(\"Failed to update description\");\n      console.error(\"Error updating description:\", error);\n    }\n  };\n\n  const startBreak = async () => {\n    if (!runningEntry) {\n      toast.error(\"No active timer to start break on\");\n      return;\n    }\n\n    try {\n      // First stop the current timer to save the work done so far\n      await axios.post(`/time-entries/${runningEntry._id}/stop`);\n      \n      // Then start the break\n      const response = await axios.post(\"/breaks/start\", {\n        timeEntryId: runningEntry._id,\n        breakType: breakType,\n      });\n      \n      // Update state - timer is stopped, break is active\n      setIsRunning(false);\n      setElapsedTime(0);\n      setActiveBreak(response.data);\n      \n      // Keep the runningEntry reference for potential resume\n      // but mark it as not running\n      setRunningEntry(prev => ({ ...prev, isRunning: false }));\n      \n      fetchPastTimers(); // Refresh past timers since we stopped current one\n      \n      toast.success(\n        `${\n          breakType.charAt(0).toUpperCase() + breakType.slice(1)\n        } break started! Timer stopped and saved.`\n      );\n    } catch (error) {\n      toast.error(error.response?.data?.message || \"Failed to start break\");\n      console.error(\"Error starting break:\", error);\n    }\n  };\n\n  const endBreak = async () => {\n    if (!activeBreak) return;\n\n    try {\n      await axios.put(`/breaks/end/${activeBreak._id}`);\n      setActiveBreak(null);\n      \n      // Clear the stopped timer reference since break is ended\n      setRunningEntry(null);\n      setFormData({ project: \"\", task: \"\", description: \"\" });\n      \n      toast.success(\"Break ended! You can now start a new timer or resume previous work.\");\n    } catch (error) {\n      toast.error(\"Failed to end break\");\n      console.error(\"Error ending break:\", error);\n    }\n  };\n\n  const continueTimer = async (pastEntry) => {\n    if (isRunning) {\n      toast.error(\"Please stop the current timer first\");\n      return;\n    }\n\n    try {\n      // Start a new timer with the same project, task, and description\n      const response = await axios.post(\"/time-entries\", {\n        project: pastEntry.project._id,\n        task: pastEntry.task?._id || null,\n        description: pastEntry.description || \"\",\n        startTime: new Date().toISOString(),\n        duration: 0,\n      });\n\n      setRunningEntry(response.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n\n      // Update form data\n      setFormData({\n        project: pastEntry.project._id,\n        task: pastEntry.task?._id || \"\",\n        description: pastEntry.description || \"\",\n      });\n\n      // Fetch tasks for the selected project\n      if (pastEntry.project._id) {\n        fetchTasks(pastEntry.project._id);\n      }\n\n      toast.success(\"Timer continued!\");\n    } catch (error) {\n      toast.error(\"Failed to continue timer\");\n      console.error(\"Error continuing timer:\", error);\n    }\n  };\n\n  const fetchPastTimers = async () => {\n    try {\n      const response = await axios.get(\"/time-entries?limit=20\");\n      // Filter out currently running timer\n      const pastEntries = response.data.timeEntries.filter(\n        (entry) => !entry.isRunning\n      );\n\n      // Group by project+task combination and keep only the most recent entry for each combination\n      const grouped = {};\n      pastEntries.forEach((entry) => {\n        const key = `${entry.project._id}-${entry.task?._id || \"notask\"}`;\n        if (\n          !grouped[key] ||\n          new Date(entry.startTime) > new Date(grouped[key].startTime)\n        ) {\n          grouped[key] = entry;\n        }\n      });\n\n      // Convert back to array and sort by most recent\n      const uniqueEntries = Object.values(grouped)\n        .sort((a, b) => new Date(b.startTime) - new Date(a.startTime))\n        .slice(0, 10); // Keep only top 10\n\n      setPastTimers(uniqueEntries);\n    } catch (error) {\n      console.error(\"Error fetching past timers:\", error);\n    }\n  };\n\n  const handleFormChange = (field, value) => {\n    setFormData((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n\n    if (field === \"description\" && runningEntry) {\n      // Debounce description updates\n      clearTimeout(window.descriptionTimeout);\n      window.descriptionTimeout = setTimeout(updateDescription, 1000);\n    }\n  };\n\n  const resumeLastTask = async () => {\n    if (isRunning) {\n      toast.error(\"Please stop the current timer first\");\n      return;\n    }\n\n    try {\n      // Get the most recent completed time entry\n      const response = await axios.get('/time-entries?limit=1');\n      const lastEntry = response.data.timeEntries[0];\n      \n      if (!lastEntry) {\n        toast.error(\"No previous task to resume\");\n        return;\n      }\n\n      // Start a new timer with the same project, task, and description\n      const newTimerResponse = await axios.post('/time-entries', {\n        project: lastEntry.project._id,\n        task: lastEntry.task?._id || null,\n        description: lastEntry.description || '',\n        startTime: new Date().toISOString(),\n        duration: 0\n      });\n\n      setRunningEntry(newTimerResponse.data);\n      setIsRunning(true);\n      setElapsedTime(0);\n      \n      // Update form data\n      setFormData({\n        project: lastEntry.project._id,\n        task: lastEntry.task?._id || '',\n        description: lastEntry.description || ''\n      });\n\n      // Fetch tasks for the selected project\n      if (lastEntry.project._id) {\n        fetchTasks(lastEntry.project._id);\n      }\n\n      toast.success(`Resumed: ${lastEntry.project.name}${lastEntry.task ? ` - ${lastEntry.task.name}` : ''}`);\n    } catch (error) {\n      toast.error('Failed to resume last task');\n      console.error('Error resuming last task:', error);\n    }\n  };\n\n  return (\n    <TimerContainer>\n      {/* Past Timers Section */}\n      <PastTimersCard>\n        <PastTimersHeader>\n          <PastTimersTitle>Recent Timers</PastTimersTitle>\n          <ToggleButton onClick={() => setShowPastTimers(!showPastTimers)}>\n            {showPastTimers ? \"Hide\" : \"Show\"}\n          </ToggleButton>\n        </PastTimersHeader>\n\n        {showPastTimers && (\n          <PastTimersList>\n            {pastTimers.length > 0 ? (\n              pastTimers.map((timer) => (\n                <PastTimerItem key={timer._id}>\n                  <PastTimerInfo>\n                    <PastTimerProject>\n                      <ProjectColorDot color={timer.project?.color} />\n                      {timer.project?.name}\n                      <TotalTimeForProject\n                        projectId={timer.project._id}\n                        taskId={timer.task?._id}\n                      />\n                    </PastTimerProject>\n                    {timer.task && (\n                      <PastTimerTask>Task: {timer.task.name}</PastTimerTask>\n                    )}\n                    {timer.description && (\n                      <PastTimerDescription title={timer.description}>\n                        {timer.description}\n                      </PastTimerDescription>\n                    )}\n                    <PastTimerMeta>\n                      <span>\n                        {new Date(timer.startTime).toLocaleDateString()} •\n                        {new Date(timer.startTime).toLocaleTimeString()} -\n                        {timer.endTime &&\n                          new Date(timer.endTime).toLocaleTimeString()}\n                      </span>\n                    </PastTimerMeta>\n                  </PastTimerInfo>\n                  <PastTimerActions>\n                    <PastTimerDuration>\n                      {formatTime(timer.duration)}\n                    </PastTimerDuration>\n                    <ContinueButton\n                      onClick={() => continueTimer(timer)}\n                      disabled={isRunning}\n                    >\n                      <FiPlay size={14} />\n                      Continue\n                    </ContinueButton>\n                  </PastTimerActions>\n                </PastTimerItem>\n              ))\n            ) : (\n              <EmptyPastTimers>\n                No past timers found. Start your first timer below!\n              </EmptyPastTimers>\n            )}\n          </PastTimersList>\n        )}\n      </PastTimersCard>\n\n      <TimerCard>\n        <TimerDisplay isRunning={isRunning}>\n          {formatTime(elapsedTime)}\n        </TimerDisplay>\n        <TimerControls>\n          <ControlButton\n            className=\"primary\"\n            isRunning={isRunning}\n            onClick={isRunning ? stopTimer : startTimer}\n            disabled={!isRunning && !formData.project}\n          >\n            {isRunning ? <FiPause /> : <FiPlay />}\n          </ControlButton>\n        </TimerControls>{\" \"}\n        {runningEntry && (\n          <CurrentActivity>\n            <ActivityTitle>\n              <FiClock style={{ marginRight: \"8px\" }} />\n              Currently tracking: {runningEntry.project?.name}\n            </ActivityTitle>\n            <ActivityMeta>\n              {runningEntry.task?.name && `Task: ${runningEntry.task.name} • `}\n              Started: {new Date(runningEntry.startTime).toLocaleTimeString()}\n            </ActivityMeta>\n          </CurrentActivity>\n        )}\n        {/* Break Controls */}\n        {runningEntry && (\n          <BreakCard isOnBreak={!!activeBreak}>\n            <BreakStatus isOnBreak={!!activeBreak}>\n              <FiCoffee />\n              {activeBreak ? \"On Break\" : \"Ready for Break\"}\n            </BreakStatus>\n\n            {activeBreak ? (\n              <div>\n                <div\n                  style={{ marginTop: \"8px\", fontSize: \"14px\", color: \"#666\" }}\n                >\n                  Break Type: {activeBreak.breakType} • Started:{\" \"}\n                  {new Date(activeBreak.startTime).toLocaleTimeString()}\n                </div>\n                <BreakControls>\n                  <BreakButton className=\"end-break\" onClick={endBreak}>\n                    <FiCheckCircle size={16} />\n                    End Break\n                  </BreakButton>\n                </BreakControls>\n              </div>\n            ) : (\n              <BreakControls>\n                <BreakTypeSelect\n                  value={breakType}\n                  onChange={(e) => setBreakType(e.target.value)}\n                >\n                  <option value=\"coffee\">Coffee Break</option>\n                  <option value=\"lunch\">Lunch Break</option>\n                  <option value=\"personal\">Personal Break</option>\n                  <option value=\"meeting\">Meeting</option>\n                  <option value=\"other\">Other</option>\n                </BreakTypeSelect>\n                <BreakButton className=\"start-break\" onClick={startBreak}>\n                  <FiCoffee size={16} />\n                  Start Break\n                </BreakButton>\n              </BreakControls>\n            )}\n          </BreakCard>\n        )}\n\n        {/* Resume Last Task - shown when no timer is running and no active break */}\n        {!isRunning && !activeBreak && (\n          <BreakCard>\n            <BreakStatus>\n              <FiClock />\n              Quick Actions\n            </BreakStatus>\n            <BreakControls>\n              <BreakButton className=\"end-break\" onClick={resumeLastTask}>\n                <FiPlay size={16} />\n                Resume Last Task\n              </BreakButton>\n            </BreakControls>\n          </BreakCard>\n        )}\n        <TimerForm>\n          <FormGroup>\n            <Label>Project *</Label>\n            <Select\n              value={formData.project}\n              onChange={(e) => handleFormChange(\"project\", e.target.value)}\n              disabled={isRunning}\n            >\n              <option value=\"\">Select a project</option>\n              {projects.map((project) => (\n                <option key={project._id} value={project._id}>\n                  {project.name}\n                </option>\n              ))}\n            </Select>\n          </FormGroup>\n\n          <FormGroup>\n            <Label>Task (Optional)</Label>\n            <Select\n              value={formData.task}\n              onChange={(e) => handleFormChange(\"task\", e.target.value)}\n              disabled={isRunning || !formData.project}\n            >\n              <option value=\"\">Select a task</option>\n              {tasks.map((task) => (\n                <option key={task._id} value={task._id}>\n                  {task.name}\n                </option>\n              ))}\n            </Select>\n          </FormGroup>\n\n          <FormGroup>\n            <Label>Description</Label>\n            <Textarea\n              value={formData.description}\n              onChange={(e) => handleFormChange(\"description\", e.target.value)}\n              placeholder=\"What are you working on?\"\n            />\n          </FormGroup>\n        </TimerForm>\n      </TimerCard>\n\n      {showPastTimers && pastTimers.length === 0 && (\n        <EmptyPastTimers>\n          No past timers found. Your tracked time will appear here.\n        </EmptyPastTimers>\n      )}\n\n      {/* Timeline Section - New Feature */}\n      <TimelineContainer>\n        <TimelineHeader>\n          <TimelineTitle>Timeline View</TimelineTitle>\n          <ProjectFilter\n            onChange={(e) => setSelectedProject(e.target.value)}\n            value={selectedProject}\n          >\n            <option value=\"\">All Projects</option>\n            {projects.map((project) => (\n              <option key={project._id} value={project._id}>\n                {project.name}\n              </option>\n            ))}\n          </ProjectFilter>\n        </TimelineHeader>\n\n        <TimelineView>\n          {Object.keys(groupedEntries).length === 0 ? (\n            <EmptyTimeline>No time entries found for the selected project.</EmptyTimeline>\n          ) : (\n            Object.entries(groupedEntries).map(([date, entries]) => (\n              <TimelineDay key={date}>\n                <TimelineDayHeader>\n                  {new Date(date).toLocaleDateString()}\n                </TimelineDayHeader>\n                {entries.map((entry) => (\n                  <TimelineEntry key={entry._id} color={entry.project.color} isBreak={entry.isBreak}>\n                    <TimelineTime>\n                      {formatTime(entry.duration)}\n                    </TimelineTime>\n                    <TimelineContent>\n                      <TimelineProject>\n                        <ProjectColorDot color={entry.project.color} />\n                        {entry.project.name}\n                      </TimelineProject>\n                      <TimelineDescription>\n                        {entry.description}\n                      </TimelineDescription>\n                    </TimelineContent>\n                    <TimelineDuration>\n                      {formatTime(entry.duration)}\n                    </TimelineDuration>\n                  </TimelineEntry>\n                ))}\n              </TimelineDay>\n            ))\n          )}\n        </TimelineView>\n      </TimelineContainer>\n    </TimerContainer>\n  );\n};\n\nexport default Timer;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SACEC,MAAM,EACNC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,QAAQ,EACRC,aAAa,QACR,gBAAgB;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGX,MAAM,CAACY,GAAG;AACjC;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,cAAc;AAKpB,MAAMG,SAAS,GAAGd,MAAM,CAACY,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAPID,SAAS;AASf,MAAME,YAAY,GAAGhB,MAAM,CAACY,GAAG;AAC/B;AACA;AACA,WAAYK,KAAK,IAAMA,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,SAAU;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIH,YAAY;AAalB,MAAMI,aAAa,GAAGpB,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GALID,aAAa;AAOnB,MAAME,aAAa,GAAGtB,MAAM,CAACuB,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAmBN,KAAK,IAAMA,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,SAAU;AACtE;AACA;AACA;AACA,oBAAqBD,KAAK,IAAMA,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,SAAU;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GArCIF,aAAa;AAuCnB,MAAMG,SAAS,GAAGzB,MAAM,CAACY,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACc,GAAA,GANID,SAAS;AAQf,MAAME,SAAS,GAAG3B,MAAM,CAACY,GAAG;AAC5B;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GAJID,SAAS;AAMf,MAAME,KAAK,GAAG7B,MAAM,CAAC8B,KAAK;AAC1B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,KAAK;AAMX,MAAMG,MAAM,GAAGhC,MAAM,CAACiC,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAZIF,MAAM;AAcZ,MAAMG,KAAK,GAAGnC,MAAM,CAACoC,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,QAAQ,GAAGrC,MAAM,CAACsC,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIF,QAAQ;AAed,MAAMG,eAAe,GAAGxC,MAAM,CAACY,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6B,GAAA,GAPID,eAAe;AASrB,MAAME,aAAa,GAAG1C,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAAC+B,IAAA,GAJID,aAAa;AAMnB,MAAME,YAAY,GAAG5C,MAAM,CAACY,GAAG;AAC/B;AACA;AACA,CAAC;AAACiC,IAAA,GAHID,YAAY;AAKlB,MAAME,SAAS,GAAG9C,MAAM,CAACY,GAAG;AAC5B,gBAAiBK,KAAK,IAAMA,KAAK,CAAC8B,SAAS,GAAG,SAAS,GAAG,SAAU;AACpE,sBAAuB9B,KAAK,IAAMA,KAAK,CAAC8B,SAAS,GAAG,SAAS,GAAG,SAAU;AAC1E;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAPIF,SAAS;AASf,MAAMG,aAAa,GAAGjD,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACsC,IAAA,GALID,aAAa;AAOnB,MAAME,WAAW,GAAGnD,MAAM,CAACuB,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6B,IAAA,GAlCID,WAAW;AAoCjB,MAAME,eAAe,GAAGrD,MAAM,CAACiC,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,IAAA,GAXID,eAAe;AAarB,MAAME,WAAW,GAAGvD,MAAM,CAACY,GAAG;AAC9B;AACA;AACA;AACA;AACA,WAAYK,KAAK,IAAMA,KAAK,CAAC8B,SAAS,GAAG,SAAS,GAAG,SAAU;AAC/D,CAAC;AAACS,IAAA,GANID,WAAW;AAQjB,MAAME,cAAc,GAAGzD,MAAM,CAACY,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8C,IAAA,GANID,cAAc;AAQpB,MAAME,gBAAgB,GAAG3D,MAAM,CAACY,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgD,IAAA,GAPID,gBAAgB;AAStB,MAAME,eAAe,GAAG7D,MAAM,CAAC8D,EAAE;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,eAAe;AAOrB,MAAMG,YAAY,GAAGhE,MAAM,CAACuB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0C,IAAA,GAdID,YAAY;AAgBlB,MAAME,cAAc,GAAGlE,MAAM,CAACY,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuD,IAAA,GANID,cAAc;AAQpB,MAAME,aAAa,GAAGpE,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyD,IAAA,GAdID,aAAa;AAgBnB,MAAME,aAAa,GAAGtE,MAAM,CAACY,GAAG;AAChC;AACA;AACA,CAAC;AAAC2D,IAAA,GAHID,aAAa;AAKnB,MAAME,gBAAgB,GAAGxE,MAAM,CAACY,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6D,IAAA,GAPID,gBAAgB;AAStB,MAAME,aAAa,GAAG1E,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAAC+D,IAAA,GAJID,aAAa;AAMnB,MAAME,oBAAoB,GAAG5E,MAAM,CAACY,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiE,IAAA,GAPID,oBAAoB;AAS1B,MAAME,aAAa,GAAG9E,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACmE,IAAA,GALID,aAAa;AAOnB,MAAME,gBAAgB,GAAGhF,MAAM,CAACY,GAAG;AACnC;AACA;AACA;AACA;AACA,CAAC;AAACqE,IAAA,GALID,gBAAgB;AAOtB,MAAME,iBAAiB,GAAGlF,MAAM,CAACY,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuE,IAAA,GAPID,iBAAiB;AASvB,MAAME,cAAc,GAAGpF,MAAM,CAACuB,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8D,IAAA,GAxBID,cAAc;AA0BpB,MAAME,eAAe,GAAGtF,MAAM,CAACY,GAAG;AAClC;AACA;AACA;AACA,gBAAiBK,KAAK,IAAKA,KAAK,CAACsE,KAAK,IAAI,SAAS;AACnD,CAAC;AAACC,IAAA,GALIF,eAAe;AAOrB,MAAMG,eAAe,GAAGzF,MAAM,CAACY,GAAG;AAClC;AACA;AACA;AACA;AACA,CAAC;AAAC8E,IAAA,GALID,eAAe;AAOrB,MAAME,gBAAgB,GAAG3F,MAAM,CAAC4F,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,IAAA,GATMF,gBAAgB;AAUtB,MAAMG,iBAAiB,GAAG9F,MAAM,CAACY,GAAG;AACpC;AACA;AACA;AACA,CAAC;AAACmF,IAAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}