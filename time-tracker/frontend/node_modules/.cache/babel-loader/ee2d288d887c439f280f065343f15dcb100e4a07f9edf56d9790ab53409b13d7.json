{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gites\\\\Desktop\\\\time Machine\\\\time-tracker\\\\frontend\\\\src\\\\components\\\\reports\\\\BreakReports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { FiCoffee, FiClock, FiUsers, FiTrendingUp } from 'react-icons/fi';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BreakReportsContainer = styled.div`\n  margin-top: 32px;\n`;\n_c = BreakReportsContainer;\nconst SectionTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 24px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n_c2 = SectionTitle;\nconst BreakStatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 24px;\n  margin-bottom: 32px;\n`;\n_c3 = BreakStatsGrid;\nconst StatCard = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n  border-left: 4px solid ${props => props.color || '#3498db'};\n`;\n_c4 = StatCard;\nconst StatValue = styled.div`\n  font-size: 2rem;\n  font-weight: 700;\n  color: #2c3e50;\n  margin-bottom: 8px;\n`;\n_c5 = StatValue;\nconst StatLabel = styled.div`\n  color: #6b7280;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c6 = StatLabel;\nconst ChartGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 32px;\n  margin-bottom: 32px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c7 = ChartGrid;\nconst ChartCard = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n`;\n_c8 = ChartCard;\nconst ChartTitle = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: #2c3e50;\n  margin-bottom: 20px;\n`;\n_c9 = ChartTitle;\nconst BreakList = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 24px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n`;\n_c0 = BreakList;\nconst BreakItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 0;\n  border-bottom: 1px solid #f3f4f6;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c1 = BreakItem;\nconst BreakInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n_c10 = BreakInfo;\nconst BreakUser = styled.div`\n  font-weight: 500;\n  color: #2c3e50;\n`;\n_c11 = BreakUser;\nconst BreakMeta = styled.div`\n  font-size: 14px;\n  color: #6b7280;\n`;\n_c12 = BreakMeta;\nconst BreakDuration = styled.div`\n  font-weight: 600;\n  color: #3498db;\n`;\n_c13 = BreakDuration;\nconst BreakReports = ({\n  filters\n}) => {\n  _s();\n  const [breakSummary, setBreakSummary] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [recentBreaks, setRecentBreaks] = useState([]);\n  useEffect(() => {\n    fetchBreakData();\n  }, [filters]);\n  const fetchBreakData = async () => {\n    setLoading(true);\n    try {\n      const params = {\n        startDate: filters.startDate,\n        endDate: filters.endDate,\n        userId: filters.user,\n        projectId: filters.project\n      };\n      const [summaryResponse, breaksResponse] = await Promise.all([axios.get('/breaks/reports/summary', {\n        params\n      }), axios.get('/breaks', {\n        params: {\n          ...params,\n          limit: 10\n        }\n      })]);\n      setBreakSummary(summaryResponse.data);\n      setRecentBreaks(breaksResponse.data.breaks || []);\n    } catch (error) {\n      console.error('Error fetching break data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatDuration = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    }\n    return `${minutes}m`;\n  };\n  const getTotalStats = () => {\n    const totalBreakTime = breakSummary.reduce((sum, user) => sum + user.totalBreakTime, 0);\n    const totalBreaks = breakSummary.reduce((sum, user) => sum + user.totalBreaks, 0);\n    const avgBreakTime = totalBreaks > 0 ? totalBreakTime / totalBreaks : 0;\n    return {\n      totalBreakTime,\n      totalBreaks,\n      avgBreakTime,\n      totalUsers: breakSummary.length\n    };\n  };\n  const getBreakTypeChartData = () => {\n    const breakTypes = {};\n    breakSummary.forEach(user => {\n      user.breakTypes.forEach(breakType => {\n        if (!breakTypes[breakType.type]) {\n          breakTypes[breakType.type] = 0;\n        }\n        breakTypes[breakType.type] += breakType.totalDuration;\n      });\n    });\n    return {\n      labels: Object.keys(breakTypes).map(type => type.charAt(0).toUpperCase() + type.slice(1)),\n      datasets: [{\n        data: Object.values(breakTypes),\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\n        borderWidth: 0\n      }]\n    };\n  };\n  const getUserBreakChartData = () => {\n    const topUsers = breakSummary.sort((a, b) => b.totalBreakTime - a.totalBreakTime).slice(0, 10);\n    return {\n      labels: topUsers.map(user => user.userName),\n      datasets: [{\n        label: 'Break Time (minutes)',\n        data: topUsers.map(user => Math.round(user.totalBreakTime / 60)),\n        backgroundColor: '#3498db',\n        borderColor: '#2980b9',\n        borderWidth: 1\n      }]\n    };\n  };\n  const stats = getTotalStats();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading break reports...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BreakReportsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: [/*#__PURE__*/_jsxDEV(FiCoffee, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), \"Break Reports\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BreakStatsGrid, {\n      children: [/*#__PURE__*/_jsxDEV(StatCard, {\n        color: \"#ff6b35\",\n        children: [/*#__PURE__*/_jsxDEV(StatValue, {\n          children: formatDuration(stats.totalBreakTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n          children: [/*#__PURE__*/_jsxDEV(FiClock, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), \"Total Break Time\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        color: \"#28a745\",\n        children: [/*#__PURE__*/_jsxDEV(StatValue, {\n          children: stats.totalBreaks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n          children: [/*#__PURE__*/_jsxDEV(FiCoffee, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), \"Total Breaks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        color: \"#3498db\",\n        children: [/*#__PURE__*/_jsxDEV(StatValue, {\n          children: formatDuration(stats.avgBreakTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n          children: [/*#__PURE__*/_jsxDEV(FiTrendingUp, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), \"Average Break Duration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        color: \"#9b59b6\",\n        children: [/*#__PURE__*/_jsxDEV(StatValue, {\n          children: stats.totalUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n          children: [/*#__PURE__*/_jsxDEV(FiUsers, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), \"Employees with Breaks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartGrid, {\n      children: [/*#__PURE__*/_jsxDEV(ChartCard, {\n        children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n          children: \"Break Types Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: getBreakTypeChartData(),\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: 'bottom'\n              }\n            }\n          },\n          height: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n        children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n          children: \"Break Time by Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: getUserBreakChartData(),\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                display: false\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                title: {\n                  display: true,\n                  text: 'Minutes'\n                }\n              }\n            }\n          },\n          height: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BreakList, {\n      children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n        children: \"Recent Breaks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), recentBreaks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          color: '#6b7280',\n          padding: '40px'\n        },\n        children: \"No breaks found for the selected period\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this) : recentBreaks.map(breakItem => {\n        var _breakItem$user;\n        return /*#__PURE__*/_jsxDEV(BreakItem, {\n          children: [/*#__PURE__*/_jsxDEV(BreakInfo, {\n            children: [/*#__PURE__*/_jsxDEV(BreakUser, {\n              children: ((_breakItem$user = breakItem.user) === null || _breakItem$user === void 0 ? void 0 : _breakItem$user.name) || 'Unknown User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BreakMeta, {\n              children: [breakItem.breakType.charAt(0).toUpperCase() + breakItem.breakType.slice(1), \" \\u2022\", ' ', new Date(breakItem.startTime).toLocaleDateString(), \" at \", new Date(breakItem.startTime).toLocaleTimeString(), breakItem.project && ` • ${breakItem.project.name}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BreakDuration, {\n            children: formatDuration(breakItem.duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, breakItem._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(BreakReports, \"5VdjSUxALYo8082cKyn9MDSu/Ds=\");\n_c14 = BreakReports;\nexport default BreakReports;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"BreakReportsContainer\");\n$RefreshReg$(_c2, \"SectionTitle\");\n$RefreshReg$(_c3, \"BreakStatsGrid\");\n$RefreshReg$(_c4, \"StatCard\");\n$RefreshReg$(_c5, \"StatValue\");\n$RefreshReg$(_c6, \"StatLabel\");\n$RefreshReg$(_c7, \"ChartGrid\");\n$RefreshReg$(_c8, \"ChartCard\");\n$RefreshReg$(_c9, \"ChartTitle\");\n$RefreshReg$(_c0, \"BreakList\");\n$RefreshReg$(_c1, \"BreakItem\");\n$RefreshReg$(_c10, \"BreakInfo\");\n$RefreshReg$(_c11, \"BreakUser\");\n$RefreshReg$(_c12, \"BreakMeta\");\n$RefreshReg$(_c13, \"BreakDuration\");\n$RefreshReg$(_c14, \"BreakReports\");","map":{"version":3,"names":["React","useState","useEffect","styled","Bar","Doughnut","FiCoffee","FiClock","FiUsers","FiTrendingUp","axios","jsxDEV","_jsxDEV","BreakReportsContainer","div","_c","SectionTitle","h2","_c2","BreakStatsGrid","_c3","StatCard","props","color","_c4","StatValue","_c5","StatLabel","_c6","ChartGrid","_c7","ChartCard","_c8","ChartTitle","h3","_c9","BreakList","_c0","BreakItem","_c1","BreakInfo","_c10","BreakUser","_c11","BreakMeta","_c12","BreakDuration","_c13","BreakReports","filters","_s","breakSummary","setBreakSummary","loading","setLoading","recentBreaks","setRecentBreaks","fetchBreakData","params","startDate","endDate","userId","user","projectId","project","summaryResponse","breaksResponse","Promise","all","get","limit","data","breaks","error","console","formatDuration","seconds","hours","Math","floor","minutes","getTotalStats","totalBreakTime","reduce","sum","totalBreaks","avgBreakTime","totalUsers","length","getBreakTypeChartData","breakTypes","forEach","breakType","type","totalDuration","labels","Object","keys","map","charAt","toUpperCase","slice","datasets","values","backgroundColor","borderWidth","getUserBreakChartData","topUsers","sort","a","b","userName","label","round","borderColor","stats","children","fileName","_jsxFileName","lineNumber","columnNumber","size","options","responsive","maintainAspectRatio","plugins","legend","position","height","display","scales","y","beginAtZero","title","text","style","textAlign","padding","breakItem","_breakItem$user","name","Date","startTime","toLocaleDateString","toLocaleTimeString","duration","_id","_c14","$RefreshReg$"],"sources":["C:/Users/gites/Desktop/time Machine/time-tracker/frontend/src/components/reports/BreakReports.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport { FiCoffee, FiClock, FiUsers, FiTrendingUp } from 'react-icons/fi';\r\nimport axios from 'axios';\r\n\r\nconst BreakReportsContainer = styled.div`\r\n  margin-top: 32px;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin-bottom: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n`;\r\n\r\nconst BreakStatsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 24px;\r\n  margin-bottom: 32px;\r\n`;\r\n\r\nconst StatCard = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\r\n  border-left: 4px solid ${props => props.color || '#3498db'};\r\n`;\r\n\r\nconst StatValue = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StatLabel = styled.div`\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n`;\r\n\r\nconst ChartGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 32px;\r\n  margin-bottom: 32px;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst ChartCard = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ChartTitle = styled.h3`\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst BreakList = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 24px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst BreakItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 0;\r\n  border-bottom: 1px solid #f3f4f6;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst BreakInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n`;\r\n\r\nconst BreakUser = styled.div`\r\n  font-weight: 500;\r\n  color: #2c3e50;\r\n`;\r\n\r\nconst BreakMeta = styled.div`\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n`;\r\n\r\nconst BreakDuration = styled.div`\r\n  font-weight: 600;\r\n  color: #3498db;\r\n`;\r\n\r\nconst BreakReports = ({ filters }) => {\r\n  const [breakSummary, setBreakSummary] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [recentBreaks, setRecentBreaks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchBreakData();\r\n  }, [filters]);\r\n\r\n  const fetchBreakData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const params = {\r\n        startDate: filters.startDate,\r\n        endDate: filters.endDate,\r\n        userId: filters.user,\r\n        projectId: filters.project\r\n      };\r\n\r\n      const [summaryResponse, breaksResponse] = await Promise.all([\r\n        axios.get('/breaks/reports/summary', { params }),\r\n        axios.get('/breaks', { params: { ...params, limit: 10 } })\r\n      ]);\r\n\r\n      setBreakSummary(summaryResponse.data);\r\n      setRecentBreaks(breaksResponse.data.breaks || []);\r\n    } catch (error) {\r\n      console.error('Error fetching break data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDuration = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes}m`;\r\n    }\r\n    return `${minutes}m`;\r\n  };\r\n\r\n  const getTotalStats = () => {\r\n    const totalBreakTime = breakSummary.reduce((sum, user) => sum + user.totalBreakTime, 0);\r\n    const totalBreaks = breakSummary.reduce((sum, user) => sum + user.totalBreaks, 0);\r\n    const avgBreakTime = totalBreaks > 0 ? totalBreakTime / totalBreaks : 0;\r\n    \r\n    return {\r\n      totalBreakTime,\r\n      totalBreaks,\r\n      avgBreakTime,\r\n      totalUsers: breakSummary.length\r\n    };\r\n  };\r\n\r\n  const getBreakTypeChartData = () => {\r\n    const breakTypes = {};\r\n    \r\n    breakSummary.forEach(user => {\r\n      user.breakTypes.forEach(breakType => {\r\n        if (!breakTypes[breakType.type]) {\r\n          breakTypes[breakType.type] = 0;\r\n        }\r\n        breakTypes[breakType.type] += breakType.totalDuration;\r\n      });\r\n    });\r\n\r\n    return {\r\n      labels: Object.keys(breakTypes).map(type => \r\n        type.charAt(0).toUpperCase() + type.slice(1)\r\n      ),\r\n      datasets: [{\r\n        data: Object.values(breakTypes),\r\n        backgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n          '#9966FF'\r\n        ],\r\n        borderWidth: 0\r\n      }]\r\n    };\r\n  };\r\n\r\n  const getUserBreakChartData = () => {\r\n    const topUsers = breakSummary\r\n      .sort((a, b) => b.totalBreakTime - a.totalBreakTime)\r\n      .slice(0, 10);\r\n\r\n    return {\r\n      labels: topUsers.map(user => user.userName),\r\n      datasets: [{\r\n        label: 'Break Time (minutes)',\r\n        data: topUsers.map(user => Math.round(user.totalBreakTime / 60)),\r\n        backgroundColor: '#3498db',\r\n        borderColor: '#2980b9',\r\n        borderWidth: 1\r\n      }]\r\n    };\r\n  };\r\n\r\n  const stats = getTotalStats();\r\n\r\n  if (loading) {\r\n    return <div>Loading break reports...</div>;\r\n  }\r\n\r\n  return (\r\n    <BreakReportsContainer>\r\n      <SectionTitle>\r\n        <FiCoffee />\r\n        Break Reports\r\n      </SectionTitle>\r\n\r\n      <BreakStatsGrid>\r\n        <StatCard color=\"#ff6b35\">\r\n          <StatValue>{formatDuration(stats.totalBreakTime)}</StatValue>\r\n          <StatLabel>\r\n            <FiClock size={16} />\r\n            Total Break Time\r\n          </StatLabel>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#28a745\">\r\n          <StatValue>{stats.totalBreaks}</StatValue>\r\n          <StatLabel>\r\n            <FiCoffee size={16} />\r\n            Total Breaks\r\n          </StatLabel>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#3498db\">\r\n          <StatValue>{formatDuration(stats.avgBreakTime)}</StatValue>\r\n          <StatLabel>\r\n            <FiTrendingUp size={16} />\r\n            Average Break Duration\r\n          </StatLabel>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#9b59b6\">\r\n          <StatValue>{stats.totalUsers}</StatValue>\r\n          <StatLabel>\r\n            <FiUsers size={16} />\r\n            Employees with Breaks\r\n          </StatLabel>\r\n        </StatCard>\r\n      </BreakStatsGrid>\r\n\r\n      <ChartGrid>\r\n        <ChartCard>\r\n          <ChartTitle>Break Types Distribution</ChartTitle>\r\n          <Doughnut \r\n            data={getBreakTypeChartData()}\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  position: 'bottom'\r\n                }\r\n              }\r\n            }}\r\n            height={300}\r\n          />\r\n        </ChartCard>\r\n\r\n        <ChartCard>\r\n          <ChartTitle>Break Time by Employee</ChartTitle>\r\n          <Bar \r\n            data={getUserBreakChartData()}\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  display: false\r\n                }\r\n              },\r\n              scales: {\r\n                y: {\r\n                  beginAtZero: true,\r\n                  title: {\r\n                    display: true,\r\n                    text: 'Minutes'\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n            height={300}\r\n          />\r\n        </ChartCard>\r\n      </ChartGrid>\r\n\r\n      <BreakList>\r\n        <ChartTitle>Recent Breaks</ChartTitle>\r\n        {recentBreaks.length === 0 ? (\r\n          <div style={{ textAlign: 'center', color: '#6b7280', padding: '40px' }}>\r\n            No breaks found for the selected period\r\n          </div>\r\n        ) : (\r\n          recentBreaks.map(breakItem => (\r\n            <BreakItem key={breakItem._id}>\r\n              <BreakInfo>\r\n                <BreakUser>{breakItem.user?.name || 'Unknown User'}</BreakUser>\r\n                <BreakMeta>\r\n                  {breakItem.breakType.charAt(0).toUpperCase() + breakItem.breakType.slice(1)} • \r\n                  {' '}{new Date(breakItem.startTime).toLocaleDateString()} at {new Date(breakItem.startTime).toLocaleTimeString()}\r\n                  {breakItem.project && ` • ${breakItem.project.name}`}\r\n                </BreakMeta>\r\n              </BreakInfo>\r\n              <BreakDuration>\r\n                {formatDuration(breakItem.duration)}\r\n              </BreakDuration>\r\n            </BreakItem>\r\n          ))\r\n        )}\r\n      </BreakList>\r\n    </BreakReportsContainer>\r\n  );\r\n};\r\n\r\nexport default BreakReports;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}