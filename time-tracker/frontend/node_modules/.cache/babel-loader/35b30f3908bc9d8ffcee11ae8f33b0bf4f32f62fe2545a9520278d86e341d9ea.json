{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAuth } from './AuthContext';\nexport const usePermissions = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const hasPermission = permission => {\n    if (!currentUser || !currentUser.permissions) {\n      return false;\n    }\n    return currentUser.permissions[permission] === true;\n  };\n  const hasRole = role => {\n    if (!currentUser) {\n      return false;\n    }\n    return currentUser.role === role;\n  };\n  const hasAnyRole = roles => {\n    if (!currentUser) {\n      return false;\n    }\n    return roles.includes(currentUser.role);\n  };\n  const canManageUsers = () => hasPermission('canManageUsers');\n  const canViewAllUsers = () => hasPermission('canViewAllUsers');\n  const canEditUserRoles = () => hasPermission('canEditUserRoles');\n  const canManageAllProjects = () => hasPermission('canManageAllProjects');\n  const canCreateProjects = () => hasPermission('canCreateProjects');\n  const canEditOwnProjects = () => hasPermission('canEditOwnProjects');\n  const canDeleteProjects = () => hasPermission('canDeleteProjects');\n  const canViewAllProjects = () => hasPermission('canViewAllProjects');\n  const canManageAllTasks = () => hasPermission('canManageAllTasks');\n  const canCreateTasks = () => hasPermission('canCreateTasks');\n  const canEditOwnTasks = () => hasPermission('canEditOwnTasks');\n  const canDeleteTasks = () => hasPermission('canDeleteTasks');\n  const canViewAllTimeEntries = () => hasPermission('canViewAllTimeEntries');\n  const canEditAllTimeEntries = () => hasPermission('canEditAllTimeEntries');\n  const canDeleteTimeEntries = () => hasPermission('canDeleteTimeEntries');\n  const canManageBreaks = () => hasPermission('canManageBreaks');\n  const canManageTeams = () => hasPermission('canManageTeams');\n  const canInviteUsers = () => hasPermission('canInviteUsers');\n  const canAssignRoles = () => hasPermission('canAssignRoles');\n  const canViewAllReports = () => hasPermission('canViewAllReports');\n  const canViewTeamReports = () => hasPermission('canViewTeamReports');\n  const canExportReports = () => hasPermission('canExportReports');\n  const canManageSettings = () => hasPermission('canManageSettings');\n  const canAccessKiosk = () => hasPermission('canAccessKiosk');\n  const isAdmin = () => hasRole('admin');\n  const isManager = () => hasRole('manager');\n  const isMember = () => hasRole('member');\n  const isAdminOrManager = () => hasAnyRole(['admin', 'manager']);\n  return {\n    hasPermission,\n    hasRole,\n    hasAnyRole,\n    canManageUsers,\n    canViewAllUsers,\n    canEditUserRoles,\n    canManageAllProjects,\n    canCreateProjects,\n    canEditOwnProjects,\n    canDeleteProjects,\n    canViewAllProjects,\n    canManageAllTasks,\n    canCreateTasks,\n    canEditOwnTasks,\n    canDeleteTasks,\n    canViewAllTimeEntries,\n    canEditAllTimeEntries,\n    canDeleteTimeEntries,\n    canManageBreaks,\n    canManageTeams,\n    canInviteUsers,\n    canAssignRoles,\n    canViewAllReports,\n    canViewTeamReports,\n    canExportReports,\n    canManageSettings,\n    canAccessKiosk,\n    isAdmin,\n    isManager,\n    isMember,\n    isAdminOrManager\n  };\n};\n_s(usePermissions, \"byfRDkJ+t3MKhIwXgwbXYFaZtD0=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["useAuth","usePermissions","_s","currentUser","hasPermission","permission","permissions","hasRole","role","hasAnyRole","roles","includes","canManageUsers","canViewAllUsers","canEditUserRoles","canManageAllProjects","canCreateProjects","canEditOwnProjects","canDeleteProjects","canViewAllProjects","canManageAllTasks","canCreateTasks","canEditOwnTasks","canDeleteTasks","canViewAllTimeEntries","canEditAllTimeEntries","canDeleteTimeEntries","canManageBreaks","canManageTeams","canInviteUsers","canAssignRoles","canViewAllReports","canViewTeamReports","canExportReports","canManageSettings","canAccessKiosk","isAdmin","isManager","isMember","isAdminOrManager"],"sources":["C:/Users/gites/Desktop/time Machine/time-tracker/frontend/src/hooks/usePermissions.js"],"sourcesContent":["import { useAuth } from './AuthContext';\r\n\r\nexport const usePermissions = () => {\r\n  const { currentUser } = useAuth();\r\n\r\n  const hasPermission = (permission) => {\r\n    if (!currentUser || !currentUser.permissions) {\r\n      return false;\r\n    }\r\n    return currentUser.permissions[permission] === true;\r\n  };\r\n\r\n  const hasRole = (role) => {\r\n    if (!currentUser) {\r\n      return false;\r\n    }\r\n    return currentUser.role === role;\r\n  };\r\n\r\n  const hasAnyRole = (roles) => {\r\n    if (!currentUser) {\r\n      return false;\r\n    }\r\n    return roles.includes(currentUser.role);\r\n  };\r\n\r\n  const canManageUsers = () => hasPermission('canManageUsers');\r\n  const canViewAllUsers = () => hasPermission('canViewAllUsers');\r\n  const canEditUserRoles = () => hasPermission('canEditUserRoles');\r\n  \r\n  const canManageAllProjects = () => hasPermission('canManageAllProjects');\r\n  const canCreateProjects = () => hasPermission('canCreateProjects');\r\n  const canEditOwnProjects = () => hasPermission('canEditOwnProjects');\r\n  const canDeleteProjects = () => hasPermission('canDeleteProjects');\r\n  const canViewAllProjects = () => hasPermission('canViewAllProjects');\r\n  \r\n  const canManageAllTasks = () => hasPermission('canManageAllTasks');\r\n  const canCreateTasks = () => hasPermission('canCreateTasks');\r\n  const canEditOwnTasks = () => hasPermission('canEditOwnTasks');\r\n  const canDeleteTasks = () => hasPermission('canDeleteTasks');\r\n  \r\n  const canViewAllTimeEntries = () => hasPermission('canViewAllTimeEntries');\r\n  const canEditAllTimeEntries = () => hasPermission('canEditAllTimeEntries');\r\n  const canDeleteTimeEntries = () => hasPermission('canDeleteTimeEntries');\r\n  const canManageBreaks = () => hasPermission('canManageBreaks');\r\n  \r\n  const canManageTeams = () => hasPermission('canManageTeams');\r\n  const canInviteUsers = () => hasPermission('canInviteUsers');\r\n  const canAssignRoles = () => hasPermission('canAssignRoles');\r\n  \r\n  const canViewAllReports = () => hasPermission('canViewAllReports');\r\n  const canViewTeamReports = () => hasPermission('canViewTeamReports');\r\n  const canExportReports = () => hasPermission('canExportReports');\r\n  \r\n  const canManageSettings = () => hasPermission('canManageSettings');\r\n  const canAccessKiosk = () => hasPermission('canAccessKiosk');\r\n\r\n  const isAdmin = () => hasRole('admin');\r\n  const isManager = () => hasRole('manager');\r\n  const isMember = () => hasRole('member');\r\n  const isAdminOrManager = () => hasAnyRole(['admin', 'manager']);\r\n\r\n  return {\r\n    hasPermission,\r\n    hasRole,\r\n    hasAnyRole,\r\n    canManageUsers,\r\n    canViewAllUsers,\r\n    canEditUserRoles,\r\n    canManageAllProjects,\r\n    canCreateProjects,\r\n    canEditOwnProjects,\r\n    canDeleteProjects,\r\n    canViewAllProjects,\r\n    canManageAllTasks,\r\n    canCreateTasks,\r\n    canEditOwnTasks,\r\n    canDeleteTasks,\r\n    canViewAllTimeEntries,\r\n    canEditAllTimeEntries,\r\n    canDeleteTimeEntries,\r\n    canManageBreaks,\r\n    canManageTeams,\r\n    canInviteUsers,\r\n    canAssignRoles,\r\n    canViewAllReports,\r\n    canViewTeamReports,\r\n    canExportReports,\r\n    canManageSettings,\r\n    canAccessKiosk,\r\n    isAdmin,\r\n    isManager,\r\n    isMember,\r\n    isAdminOrManager\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}